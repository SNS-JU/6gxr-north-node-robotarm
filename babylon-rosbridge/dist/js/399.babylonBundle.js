"use strict";(self.webpackChunkfinwe_babylonjs_visualization_app=self.webpackChunkfinwe_babylonjs_visualization_app||[]).push([[399],{8134:(e,t,i)=>{i.r(t),i.d(t,{default:()=>o});const o=i.p+"player_close_icon.png"},46399:(e,t,i)=>{i.r(t),i.d(t,{UR10Scene:()=>G,UR10View:()=>J,default:()=>$}),i(53596);var o=i(12229),n=i(90972),s=i(42655),a=i(8714),r=i(23579),l=i(58786);class d{static colorFor(e,t,i){let o=(Math.max(Math.min(e,i),t)-t)/(i-t);return o=.1*Math.round(10*o),this.getHexColorFromHueGradient(o)}static getHexColorFromHueGradient(e){const t=120*e;return this.hslToHex(t,100,50)}static hslToHex(e,t,i){i/=100;const o=t*Math.min(i,1-i)/100,n=t=>{const n=(t+e/30)%12,s=i-o*Math.max(Math.min(n-3,9-n,1),-1);return Math.round(255*s).toString(16).padStart(2,"0")};return`#${n(0)}${n(8)}${n(4)}`}static getUrlParameter(e){let t,i,o=window.location.search.substring(1).split("&"),n=e.toLowerCase();for(i=0;i<o.length;i++)if(t=o[i].split("="),t[0].toLowerCase()===n)return void 0===t[1]||decodeURIComponent(t[1]);return!1}static setUrlParameter(e,t){const i=new URL(window.location.href);i.searchParams.set(e,t),window.history.pushState({},"",i.href)}static degreesToRadians(e){return e*Math.PI/180}static radiansToDegrees(e){return 180*e/Math.PI}static getCoordinatesFromLatLng(e,t,i){const n=e*Math.PI/180,s=t*Math.PI/180,a=i*Math.cos(n)*Math.cos(s),r=i*Math.cos(n)*Math.sin(s),l=i*Math.sin(n);return new o.Vector3(a,l,r)}static exportJSON(e,t){const i=document.createElement("a");i.href=URL.createObjectURL(new Blob([JSON.stringify(e,null,2)],{type:"text/plain"})),i.setAttribute("download",`${t}.txt`),document.body.appendChild(i),i.click(),document.body.removeChild(i)}static calculateDirection(e,t){if(null!=e&&null!=t){let i=t?.absolutePosition.subtract(e.absolutePosition);return null!=i?(i.normalize(),i=o.Vector3.TransformNormal(i,e.getWorldMatrix().clone().invert()),i):void 0}}static calculateDirectionWithPosition(e,t){const i=t.subtract(e);return i.normalize(),i}static isMetaQuest(){return window.navigator.userAgent.includes("Quest")}static isBoundingBoxInsideAnother(e,t,i){const o=(e.maximum.x-e.minimum.x)*i.x,n=(e.maximum.y-e.minimum.y)*i.y,s=(e.maximum.z-e.minimum.z)*i.z;console.log("box1width",o),console.log("box1height",n),console.log("box1depth",s);const a=t.maximum.x-t.minimum.x,r=t.maximum.y-t.minimum.y,l=t.maximum.z-t.minimum.z;return console.log("box2width",a),console.log("box2height",r),console.log("box2depth",l),o<=a&&n<=r&&s<=l}static createTextPlane(e,t,i,n,s=null){const a=(0,o.CreatePlane)("debugTextPlane",{width:1.6,height:.9},t);a.parent=s,a.position=i,a.billboardMode=o.Mesh.BILLBOARDMODE_ALL;const r=l.AdvancedDynamicTexture.CreateForMesh(a),d=new l.TextBlock;return d.text=e,d.fontSize=15,d.color=n,r.addControl(d),{textPlane:a,label:d}}static isPointInsideMesh(e,t){const i=t.getWorldMatrix(),n=o.Matrix.Invert(i),s=o.Vector3.TransformCoordinates(e,n),a=t.getBoundingInfo().boundingBox;return!(s.x<a.minimum.x||s.x>a.maximum.x||s.y<a.minimum.y||s.y>a.maximum.y||s.z<a.minimum.z||s.z>a.maximum.z)}}var c=i(39371);const h=i.p+"teleportationPlaneDynamicTextureCustom.png",u=JSON.parse('{"tags":null,"ignoreAlpha":false,"maxSimultaneousLights":4,"mode":0,"id":"node","name":"node","checkReadyOnEveryCall":false,"checkReadyOnlyOnce":false,"state":"","alpha":1,"backFaceCulling":true,"cullBackFaces":true,"sideOrientation":1,"alphaMode":2,"_needDepthPrePass":true,"disableDepthWrite":false,"disableColorWrite":false,"forceDepthWrite":false,"depthFunction":0,"separateCullingPass":false,"fogEnabled":true,"pointSize":1,"zOffset":0,"pointsCloud":false,"fillMode":0,"editorData":{"locations":[{"blockId":31,"x":-1180,"y":-740},{"blockId":32,"x":-1420,"y":-740},{"blockId":33,"x":-1780,"y":-740},{"blockId":34,"x":-2080,"y":-760},{"blockId":35,"x":-2060,"y":-660},{"blockId":36,"x":-2360,"y":-720},{"blockId":37,"x":-2360,"y":-620},{"blockId":38,"x":-2360,"y":-520},{"blockId":39,"x":-1800,"y":-600},{"blockId":40,"x":1640,"y":1000},{"blockId":41,"x":-20,"y":220},{"blockId":42,"x":-460,"y":80},{"blockId":43,"x":-800,"y":-60},{"blockId":44,"x":-1120,"y":-180},{"blockId":45,"x":-1120,"y":-80},{"blockId":46,"x":-1120,"y":40},{"blockId":47,"x":-1460,"y":-100},{"blockId":48,"x":-1740,"y":-100},{"blockId":49,"x":-2140,"y":0},{"blockId":50,"x":-1740,"y":20},{"blockId":51,"x":-2140,"y":100},{"blockId":52,"x":-1740,"y":140},{"blockId":53,"x":-1740,"y":240},{"blockId":54,"x":-800,"y":100},{"blockId":55,"x":-1140,"y":1040},{"blockId":56,"x":-1400,"y":1040},{"blockId":57,"x":-1660,"y":1040},{"blockId":58,"x":-460,"y":240},{"blockId":59,"x":-300,"y":420},{"blockId":60,"x":-800,"y":420},{"blockId":61,"x":-1120,"y":220},{"blockId":62,"x":-1740,"y":340},{"blockId":63,"x":-1740,"y":440},{"blockId":64,"x":-540,"y":560},{"blockId":65,"x":-800,"y":560},{"blockId":66,"x":-480,"y":1040},{"blockId":67,"x":-740,"y":1040}],"frames":[{"x":-2400,"y":-840,"width":1508.65,"height":500,"color":[0.2823529411764706,0.2823529411764706,0.2823529411764706],"name":"vertex","isCollapsed":false,"blocks":[34,38,33,39,32,31,36,37,35]},{"x":-1780,"y":920,"width":1590.54,"height":400,"color":[0.2823529411764706,0.2823529411764706,0.2823529411764706],"name":"alpha","isCollapsed":false,"blocks":[57,56,55,67,66]},{"x":-2220,"y":-280,"width":2476.93,"height":1100,"color":[0.2823529411764706,0.2823529411764706,0.2823529411764706],"name":"handColor","isCollapsed":false,"blocks":[44,45,49,48,47,51,50,52,53,46,43,54,42,58,62,63,61,60,65,64,59,41]}],"x":1469.4565852203573,"y":-249.42611073084083,"zoom":0.7848865253776443},"customType":"BABYLON.NodeMaterial","outputNodes":[31,40],"blocks":[{"customType":"BABYLON.VertexOutputBlock","id":31,"name":"VertexOutput","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[{"name":"vector","displayName":"vector","inputName":"vector","targetBlockId":32,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[]},{"customType":"BABYLON.TransformBlock","id":32,"name":"WorldPos * ViewProjectionTransform","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[{"name":"vector","displayName":"vector","inputName":"vector","targetBlockId":33,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"transform","displayName":"transform","inputName":"transform","targetBlockId":39,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output"},{"name":"xyz","displayName":"xyz"}],"complementZ":0,"complementW":1},{"customType":"BABYLON.TransformBlock","id":33,"name":"WorldPos","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[{"name":"vector","displayName":"vector","inputName":"vector","targetBlockId":34,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"transform","displayName":"transform","inputName":"transform","targetBlockId":35,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output","isExposedOnFrame":true,"exposedPortPosition":0},{"name":"xyz","displayName":"xyz"}],"complementZ":0,"complementW":1},{"customType":"BABYLON.InputBlock","id":34,"name":"position","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":8,"mode":1,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.BonesBlock","id":35,"name":"Bones","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[{"name":"matricesIndices","displayName":"matricesIndices","inputName":"matricesIndices","targetBlockId":36,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"matricesWeights","displayName":"matricesWeights","inputName":"matricesWeights","targetBlockId":37,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"matricesIndicesExtra","displayName":"matricesIndicesExtra"},{"name":"matricesWeightsExtra","displayName":"matricesWeightsExtra"},{"name":"world","displayName":"world","inputName":"world","targetBlockId":38,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output","isExposedOnFrame":true,"exposedPortPosition":1}]},{"customType":"BABYLON.InputBlock","id":36,"name":"matricesIndices","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":16,"mode":1,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.InputBlock","id":37,"name":"matricesWeights","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":16,"mode":1,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.InputBlock","id":38,"name":"World","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":128,"mode":0,"systemValue":1,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.InputBlock","id":39,"name":"ViewProjection","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":128,"mode":0,"systemValue":4,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.FragmentOutputBlock","id":40,"name":"FragmentOutput","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":2,"inputs":[{"name":"rgba"},{"name":"rgb","inputName":"rgb","targetBlockId":41,"targetConnectionName":"output","isExposedOnFrame":true},{"name":"a","inputName":"a","targetBlockId":66,"targetConnectionName":"output","isExposedOnFrame":true}],"outputs":[]},{"customType":"BABYLON.LerpBlock","id":41,"name":"Lerp","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"left","displayName":"left","inputName":"left","targetBlockId":42,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"right","displayName":"right","inputName":"right","targetBlockId":58,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"gradient","displayName":"gradient","inputName":"gradient","targetBlockId":59,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output","isExposedOnFrame":true,"exposedPortPosition":0}]},{"customType":"BABYLON.LerpBlock","id":42,"name":"Lerp","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"left","displayName":"left","inputName":"left","targetBlockId":43,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"right","displayName":"right","inputName":"right","targetBlockId":54,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"gradient","displayName":"gradient","inputName":"gradient","targetBlockId":55,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":2}],"outputs":[{"name":"output","displayName":"output"}]},{"customType":"BABYLON.LerpBlock","id":43,"name":"Lerp","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"left","displayName":"left","inputName":"left","targetBlockId":44,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"right","displayName":"right","inputName":"right","targetBlockId":45,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"gradient","displayName":"gradient","inputName":"gradient","targetBlockId":46,"targetConnectionName":"fresnel","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output"}]},{"customType":"BABYLON.InputBlock","id":44,"name":"fresnelColor","comments":"","visibleInInspector":true,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":32,"mode":0,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"BABYLON.Color3","value":[0.4,0.4,0.8980392156862745]},{"customType":"BABYLON.InputBlock","id":45,"name":"baseColor","comments":"","visibleInInspector":true,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":32,"mode":0,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"BABYLON.Color3","value":[0.247,0.24705882352941178,0.796078431372549]},{"customType":"BABYLON.FresnelBlock","id":46,"name":"Fresnel","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"worldNormal","displayName":"worldNormal","inputName":"worldNormal","targetBlockId":47,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"viewDirection","displayName":"viewDirection","inputName":"viewDirection","targetBlockId":50,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"bias","displayName":"bias","inputName":"bias","targetBlockId":52,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"power","displayName":"power","inputName":"power","targetBlockId":53,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"fresnel","displayName":"fresnel"}]},{"customType":"BABYLON.NormalizeBlock","id":47,"name":"Normalize","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"input","displayName":"input","inputName":"input","targetBlockId":48,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output"}]},{"customType":"BABYLON.TransformBlock","id":48,"name":"World normal","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[{"name":"vector","displayName":"vector","inputName":"vector","targetBlockId":49,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"transform","displayName":"transform","inputName":"transform","targetBlockId":35,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":0}],"outputs":[{"name":"output","displayName":"output"},{"name":"xyz","displayName":"xyz"}],"complementZ":0,"complementW":0},{"customType":"BABYLON.InputBlock","id":49,"name":"normal","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":8,"mode":1,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.ViewDirectionBlock","id":50,"name":"View direction","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"worldPosition","displayName":"worldPosition","inputName":"worldPosition","targetBlockId":33,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":1},{"name":"cameraPosition","displayName":"cameraPosition","inputName":"cameraPosition","targetBlockId":51,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output"}]},{"customType":"BABYLON.InputBlock","id":51,"name":"cameraPosition","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":8,"mode":0,"systemValue":7,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.InputBlock","id":52,"name":"fresnetBias","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":1,"mode":0,"animationType":0,"min":0,"max":1,"isBoolean":false,"matrixMode":0,"isConstant":true,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"number","value":0.1},{"customType":"BABYLON.InputBlock","id":53,"name":"fresnelPower","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":1,"mode":0,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":true,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"number","value":2.5},{"customType":"BABYLON.InputBlock","id":54,"name":"fingerColor","comments":"","visibleInInspector":true,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":32,"mode":0,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"BABYLON.Color3","value":[0.5,0.5098039215686274,1]},{"customType":"BABYLON.OneMinusBlock","id":55,"name":"One minus","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"input","displayName":"input","inputName":"input","targetBlockId":56,"targetConnectionName":"y","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output","isExposedOnFrame":true,"exposedPortPosition":0}]},{"customType":"BABYLON.VectorSplitterBlock","id":56,"name":"VectorSplitter","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"xyzw","displayName":"xyzw"},{"name":"xyz ","displayName":"xyz "},{"name":"xy ","displayName":"xy ","inputName":"xy ","targetBlockId":57,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"xyz","displayName":"xyz"},{"name":"xy","displayName":"xy"},{"name":"zw","displayName":"zw"},{"name":"x","displayName":"x"},{"name":"y","displayName":"y"},{"name":"z","displayName":"z"},{"name":"w","displayName":"w"}]},{"customType":"BABYLON.InputBlock","id":57,"name":"uv","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":4,"mode":1,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false},{"customType":"BABYLON.InputBlock","id":58,"name":"tipFresnelColor","comments":"","visibleInInspector":true,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":32,"mode":0,"animationType":0,"min":0,"max":0,"isBoolean":false,"matrixMode":0,"isConstant":false,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"BABYLON.Color3","value":[0.9450980392156862,0.8941176470588236,0.8941176470588236]},{"customType":"BABYLON.MultiplyBlock","id":59,"name":"Multiply","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"left","displayName":"left","inputName":"left","targetBlockId":60,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"right","displayName":"right","inputName":"right","targetBlockId":64,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output"}]},{"customType":"BABYLON.OneMinusBlock","id":60,"name":"One minus","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"input","displayName":"input","inputName":"input","targetBlockId":61,"targetConnectionName":"fresnel","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","displayName":"output"}]},{"customType":"BABYLON.FresnelBlock","id":61,"name":"Fresnel","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"worldNormal","displayName":"worldNormal","inputName":"worldNormal","targetBlockId":47,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"viewDirection","displayName":"viewDirection","inputName":"viewDirection","targetBlockId":50,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"bias","displayName":"bias","inputName":"bias","targetBlockId":62,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"power","displayName":"power","inputName":"power","targetBlockId":63,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"fresnel","displayName":"fresnel"}]},{"customType":"BABYLON.InputBlock","id":62,"name":"tipFresnelBias","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":1,"mode":0,"animationType":0,"min":0,"max":1,"isBoolean":false,"matrixMode":0,"isConstant":true,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"number","value":0.2},{"customType":"BABYLON.InputBlock","id":63,"name":"tipFresnelPower","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":1,"inputs":[],"outputs":[{"name":"output"}],"type":1,"mode":0,"animationType":0,"min":0,"max":3,"isBoolean":false,"matrixMode":0,"isConstant":true,"groupInInspector":"","convertToGammaSpace":false,"convertToLinearSpace":false,"valueType":"number","value":1.74},{"customType":"BABYLON.ClampBlock","id":64,"name":"Clamp","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"value","inputName":"value","targetBlockId":65,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output"}],"minimum":0,"maximum":1},{"customType":"BABYLON.RemapBlock","id":65,"name":"Remap","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"input","displayName":"input","inputName":"input","targetBlockId":55,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":3},{"name":"sourceMin","displayName":"sourceMin"},{"name":"sourceMax","displayName":"sourceMax"},{"name":"targetMin","displayName":"targetMin"},{"name":"targetMax","displayName":"targetMax"}],"outputs":[{"name":"output","displayName":"output"}],"sourceRange":[0,1],"targetRange":[-1.5,1]},{"customType":"BABYLON.ClampBlock","id":66,"name":"Clamp","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"value","inputName":"value","targetBlockId":67,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1}],"outputs":[{"name":"output","isExposedOnFrame":true,"exposedPortPosition":1}],"minimum":0,"maximum":1},{"customType":"BABYLON.RemapBlock","id":67,"name":"Remap","comments":"","visibleInInspector":false,"visibleOnFrame":false,"target":4,"inputs":[{"name":"input","displayName":"input","inputName":"input","targetBlockId":55,"targetConnectionName":"output","isExposedOnFrame":true,"exposedPortPosition":-1},{"name":"sourceMin","displayName":"sourceMin"},{"name":"sourceMax","displayName":"sourceMax"},{"name":"targetMin","displayName":"targetMin"},{"name":"targetMax","displayName":"targetMax"}],"outputs":[{"name":"output","displayName":"output"}],"sourceRange":[0,1],"targetRange":[-0.1,1.5]}]}'),m=i.p+"r_hand_rhs.glb",p=i.p+"l_hand_rhs.glb";var g=i(70802);g.G.name;const f=`${g.G.name}-camDeviceId`,b=(g.G.name,g.G.name,`${g.G.name}-framerate`),C=(g.G.name,"smartwatchCreated"),x="stylusActivated",P=i.p+"pickSound.wav",v=i.p+"dropSound.wav";class y{constructor(e){this.pickedColor=new o.Color3(.2,1,.2),this.pointerTimeoutMilliseconds=6e4,this.inputCooldown=800,console.log("Creating smartwatch GUI"),this.createControlsContainer(e),this.controllerTransformClone=new o.TransformNode("ControllerTransformClone"),this.findPointers(e);const t=new CustomEvent(C,{detail:{smartwatch:this}});document.dispatchEvent(t),this.setEnabled(!1)}updateXRReferences(e,t,i,n=!0){console.log("Updating smartwatch GUI references"),this.setEnabled(!0),this.xr=t,t.pointerSelection.laserPointerPickedColor=this.pickedColor.clone(),t.pointerSelection.selectionMeshPickedColor=this.pickedColor.clone(),this.findPointers(i),this.controlsContainer.setParent(this.controllerTransformClone);const s=()=>{this.controllerTransformClone.position=e.absolutePosition.clone(),this.controllerTransformClone.rotationQuaternion=e.absoluteRotationQuaternion.clone()};i.registerBeforeRender(s),e.onDisposeObservable.add((()=>{i.unregisterBeforeRender(s)})),n?(this.controlsContainer.position=new o.Vector3(.002,-.07,.018),this.controlsContainer.rotationQuaternion=o.Quaternion.FromEulerAngles(d.degreesToRadians(-78.0716),d.degreesToRadians(-32.7302),d.degreesToRadians(-143.7342))):(this.controlsContainer.position=new o.Vector3(-.045,.023,.02),this.controlsContainer.rotationQuaternion=o.Quaternion.FromEulerAngles(d.degreesToRadians(49),d.degreesToRadians(0),d.degreesToRadians(177))),void 0!==this.colorPickerMesh&&(this.colorPickerMesh.setParent(e),this.colorPickerMesh.position=new o.Vector3(.293,3.805,-3.083),this.colorPickerMesh.scaling=new o.Vector3(5,5,5),this.colorPickerMesh.rotationQuaternion=o.Quaternion.FromEulerAngles(d.degreesToRadians(74.6611),d.degreesToRadians(147.0363),d.degreesToRadians(-114.41)))}createControlsContainer(e){this.controlsContainer=new o.TransformNode("ControlsContainer"),this.controlsContainer.scaling=new o.Vector3(.02,.02,.02),this.onSound=new o.Sound("pickSound",P,e,null,{loop:!1,autoplay:!1,spatialSound:!0}),this.onSound.attachToMesh(this.controlsContainer),this.offSound=new o.Sound("dropSound",v,e,null,{loop:!1,autoplay:!1,spatialSound:!0}),this.offSound.attachToMesh(this.controlsContainer)}createColorPicker(e,t,i){this.colorPickerMesh=o.MeshBuilder.CreatePlane("ColorPicker",{width:1,height:1}),this.colorPickerMesh.position=new o.Vector3(1.4,1.5,.4);const n=l.AdvancedDynamicTexture.CreateForMesh(this.colorPickerMesh);n.name="ColorPickerTexture";const s=new l.StackPanel;n.addControl(s);const a=new l.TextBlock;a.text="",a.height="200px",a.color="white",a.textHorizontalAlignment=l.Control.HORIZONTAL_ALIGNMENT_CENTER,a.fontSize="80",s.addControl(a),i.registerBeforeRender((()=>{if(this.laserPointers)for(let e=0;e<this.laserPointers.length;e++)if(this.laserPointers[e].isVisible){a.text=this.laserPointers[e].scaling.y.toFixed(2)+" m";break}}));const r=new l.ColorPicker;r.value=this.pickedColor.clone(),r.horizontalAlignment=l.Control.HORIZONTAL_ALIGNMENT_CENTER,r.height="750px",r.width="750px",r.onValueChangedObservable.add((function(e){t.pointerSelection.laserPointerPickedColor=e,t.pointerSelection.selectionMeshPickedColor=e})),s.addControl(r),this.colorPickerMesh.isNearPickable=!0}addControls(e){if(void 0===this.controlsContainer)return void console.log("Smartwatch controls container is not defined");this.controls=e,this.controlsMesh=o.MeshBuilder.CreatePlane("Controls",{width:1,height:1}),this.controlsMesh.setParent(this.controlsContainer),this.controlsMesh.rotationQuaternion=o.Quaternion.FromEulerAngles(d.degreesToRadians(0),d.degreesToRadians(0),d.degreesToRadians(0)),this.controlsMesh.isNearPickable=!0,this.controlsMesh.scaling=new o.Vector3(5,e.heightInPixels/e.widthInPixels*5,5);const t=this.controlsMesh.getBoundingInfo(),i=t.boundingBox.center,n=t.boundingBox.extendSize,s=new o.Vector3(i.x,i.y+n.y,i.z),a=new o.Vector3(s.x*this.controlsMesh.scaling.x,s.y*this.controlsMesh.scaling.y,s.z*this.controlsMesh.scaling.z);this.controlsMesh.position=new o.Vector3(0,-a.y,0);const r=l.AdvancedDynamicTexture.CreateForMesh(this.controlsMesh,e.widthInPixels,e.heightInPixels);r.name="ControlsTexture",r.addControl(e)}dispose(){this.colorPickerMesh?.dispose(!1,!0),this.controlsMesh?.dispose(!1,!0)}findPointers(e){this.gazeTrackers=e.getMeshesById("gazeTracker"),this.laserPointers=e.getMeshesById("laserPointer")}setEnabled(e){this.colorPickerMesh&&this.colorPickerMesh.setEnabled(e),this.controlsMesh&&this.controlsMesh.setEnabled(e)}setupPointerCheckbox(e,t){e.isChecked=this.xr.pointerSelection.attached,this.xr.pointerSelection.onFeatureAttachObservable.add((()=>{e.isChecked=!0})),this.xr.pointerSelection.onFeatureDetachObservable.add((()=>{e.isChecked=!1})),e.onIsCheckedChangedObservable.add((e=>{e?(this.xr.pointerSelection.attach(),this.findPointers(t),this.startPointerTimeout()):(void 0!==this.pointerTimeoutId&&clearTimeout(this.pointerTimeoutId),this.xr.pointerSelection.detach())}))}checkCooldown(e){return null!=e.isCooldown&&1==e.isCooldown||(e.isCooldown=!0,e.isHitTestVisible=!1,setTimeout((()=>{e.isCooldown=!1,e.isHitTestVisible=!0}),this.inputCooldown),!1)}xrEnhanceCheckbox(e){e.onIsCheckedChangedObservable.add((t=>{this.checkCooldown(e)||(t?this.onSound.play():this.offSound.play())}))}xrEnhanceSlider(e){e.onPointerDownObservable.add((()=>{this.onSound.play()})),e.onPointerUpObservable.add((()=>{this.offSound.play()}))}xrEnhanceButton(e){e.onPointerClickObservable.add((()=>{this.checkCooldown(e)||this.onSound.play()})),e.pointerOutAnimation=()=>{},e.pointerEnterAnimation=()=>{}}startPointerTimeout(){0!==this.pointerTimeoutMilliseconds&&(void 0!==this.pointerTimeoutId&&clearTimeout(this.pointerTimeoutId),this.pointerTimeoutId=window.setTimeout((()=>{this.xr.pointerSelection.detach(),this.pointerTimeoutId=void 0}),this.pointerTimeoutMilliseconds))}}var S=i(80533);class w extends S.Jg{constructor(e="immersive-vr",t="local-floor"){const i=document.createElement("button"),o=parseInt(s.Y.buttonHeight);i.style.cssText=`\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            height: ${4*o}px;\n            padding: 0 80px;\n            border: none;\n            border-radius: ${2*s.Y.cornerRadius}px;\n            background: ${s.Y.bgColor};\n            color: ${s.Y.primaryColor};\n            font-family: ${s.Y.fontFamily};\n            font-size: ${3*parseInt(s.Y.fontSize)}px;\n            cursor: pointer;\n            transition: background 0.3s;\n            z-index: 1000;\n            white-space: nowrap;\n            outline: ${s.Y.outlineColor} solid 4px;\n        `,i.textContent="Enter XR",super(i,e,t)}update(e){e===this?(this.element.textContent="Exit XR",this.element.style.background=s.Y.bgColor,this.element.style.outline="#f44336 solid 4px",this.element.style.color="#f44336"):(this.element.textContent="Enter XR",this.element.style.background=s.Y.bgColor,this.element.style.outline=`${s.Y.outlineColor} solid 4px`,this.element.style.color=s.Y.primaryColor)}}const T=class{constructor(){this.debugLayerEnabled="1"==d.getUrlParameter("debug"),this.avatarEnabled="0"!==d.getUrlParameter("avatar"),this.xrEnabled="1"===d.getUrlParameter("xr"),this.arEnabled="1"===d.getUrlParameter("ar"),this.teleportationEnabled="1"===d.getUrlParameter("teleportation"),this.guiDevelopment=!1,this.ssaoEnabled=!0,this.pointCloudEnabled=!0,this.pointCloudAnimationEnabled=!1,this.arHandMeshEnabled=!0,this.arHandMeshFullyTransparent=!1,this.stylusPointerVisible=!0,this.cameraAnimationFPS=144,this.cameraAnimationDuration=1,this.cameraInitialAlpha=3.147,this.cameraInitialBeta=1.3833,this.cameraInitialRadius=1.2,this.cameraInitialTarget=new n.P(1.847,1.078,1.629),this.cameraInitialLowerRadiusLimit=.2,this.cameraInitialUpperRadiusLimit=20,this.cameraInitialPanningSensibility=1e3,this.sceneClearColor=new o.Color4(.1,.1,.1,1),this.currentXrCameraInitialPosition=new n.P(0,0,1.1),this.xrCameraInitialRotationQuaternion=n._f.FromEulerAngles(0,180,0),this.maxPointerDistance=10,this.enableTeleportation=(e,t,i,n)=>{t.teleportation.attach();const s=new o.StandardMaterial("teleportationCircleMaterial",e);s.backFaceCulling=!1,s.disableLighting=!0,s.emissiveColor=new o.Color3(1,1,1),s.diffuseTexture=new o.Texture(h,e),s.diffuseTexture.hasAlpha=!0,s.useAlphaFromDiffuseTexture=!0;const a=new o.StandardMaterial("torusArrowMaterial",e);a.backFaceCulling=!1,a.emissiveColor=new o.Color3(0,.9,1),a.alpha=.5,i.enableFeature(o.WebXRFeatureName.TELEPORTATION,"stable",{xrInput:t.input,floorMeshes:n,timeToTeleport:500,defaultTargetMeshOptions:{disableLighting:!0,teleportationCircleMaterial:s,torusArrowMaterial:a},forceHandedness:"left"})},this.resetDemo=()=>{null!=this.objectManipulation&&(this.objectManipulation.resetIsNeeded=!0),this.resetXRCamera()},this.resetXRCamera=()=>{if(null!=this.webXrcamera&&null!=this.dummyCamera){console.log("Resetting XR camera");const e=!1;this.webXrcamera.setTransformationFromNonVRCamera(this.dummyCamera,e)}}}async createScene(e,t,i=!0){this.ssaoEnabled=i;const l=new a.x(e);if(l.clearColor=this.sceneClearColor,this.scene=l,0==this.xrEnabled){this.arcCamera=new r.Yf("ArcRotateCamera",this.cameraInitialAlpha,this.cameraInitialBeta,this.cameraInitialRadius,this.cameraInitialTarget.clone(),l),this.scene.activeCameras?.push(this.arcCamera),this.arcCamera.minZ=.01,this.arcCamera.maxZ=100;const e=!1;this.arcCamera.attachControl(t,e),this.arcCamera.wheelDeltaPercentage=.02,this.arcCamera.lowerRadiusLimit=.4,this.arcCamera.fov=d.degreesToRadians(80),this.arcCamera.invertRotation=!0}const h=await(0,c.Z)(),u=new o.HavokPlugin(!0,h);if(l.enablePhysics(new n.P(0,-9.8,0),u),this.debugLayerEnabled&&l.debugLayer.show({gizmoCamera:this.arcCamera,handleResize:!0,overlay:!1,globalRoot:document.getElementById("#root")||void 0,embedMode:!1}),l.onKeyboardObservable.add((e=>{e.event.key}),o.KeyboardEventTypes.KEYUP),this.xrEnabled){const e=s.Y.createTitleElement(document.title);document.body.appendChild(e)}else if(this.ssaoEnabled&&o.SSAO2RenderingPipeline.IsSupported){var m=new o.SSAO2RenderingPipeline("ssao",l,{ssaoRatio:1,blurRatio:1});m.radius=.4,m.totalStrength=.9,m.base=.15,m.expensiveBlur=!1,m.samples=14,m.minZAspect=.5,m.maxZ=40,l.postProcessRenderPipelineManager.attachCamerasToRenderPipeline("ssao",this.arcCamera),m.textureSamples=0}return document.addEventListener("visibilitychange",(()=>{"hidden"===document.visibilityState?l.audioEnabled=!1:l.audioEnabled=!0})),l}animateArcCameraTo(e,t,i,n,s,a,r,l,d){if(void 0===this.arcCamera)return void console.error("arcCamera is undefined");if(this.cameraAnimationStateIndex==l)this.cameraAnimationStateIndex=void 0;else{if(this.cameraTargetAnimation?.animationStarted)return;this.cameraAnimationStateIndex=l}this.cameraTargetAnimation?.stop(),this.cameraAlphaAnimation?.stop(),this.cameraBetaAnimation?.stop(),this.cameraRadiusAnimation?.stop();const c=a*r,h=new o.SineEase;h.setEasingMode(o.EasingFunction.EASINGMODE_EASEINOUT);const u=o.Animation.ANIMATIONLOOPMODE_CONSTANT;this.cameraTargetAnimation=o.Animation.CreateAndStartAnimation(`cameraAnimation${l}target`,this.arcCamera,"target",a,c,this.arcCamera?.target.clone(),t,u,h,(()=>{this.cameraTargetAnimation?.stop(),d()}));const m=this.arcCamera.alpha,p=(1,(g=this.arcCamera.alpha)+1*function(e,t){const i=2*Math.PI,o=(t-e)%i;return 2*o%i-o}(g,i));var g;this.cameraAlphaAnimation=o.Animation.CreateAndStartAnimation(`cameraAnimation${l}alpha`,this.arcCamera,"alpha",a,c,m,p,u,h,(()=>{this.cameraAlphaAnimation?.stop()})),this.cameraBetaAnimation=o.Animation.CreateAndStartAnimation(`cameraAnimation${l}beta`,this.arcCamera,"beta",a,c,this.arcCamera?.beta,n,u,h,(()=>{this.cameraBetaAnimation?.stop()})),this.cameraRadiusAnimation=o.Animation.CreateAndStartAnimation(`cameraAnimation${l}radius`,this.arcCamera,"radius",a,c,this.arcCamera?.radius,s,u,h,(()=>{this.cameraRadiusAnimation?.stop()}))}createUIOptions(){const e=this.arEnabled?"immersive-ar":void 0,t=this.arEnabled?"unbounded":"local-floor",i=new w(e,t);return this.customXRButton=i,{sessionMode:e,referenceSpaceType:t,customButtons:[i]}}setupXRFeatures(e,t,i=!1){this.webXrcamera=this.scene.getCameraByName("webxr"),null==this.webXrcamera&&console.error("webXrcamera is undefined"),this.setXrCameraInitialPositionRotation(e);const n=e.baseExperience.featuresManager;if(this.enableNearInteraction(e,n),this.enablePointerSelection(e,n),i||e.pointerSelection.detach(),this.teleportationEnabled&&null!=t&&this.enableTeleportation(this.scene,e,n,t),this.enableHandTracking(e,n),this.setupFPSButtons(e,!0),this.arEnabled){const e=n.enableFeature(o.WebXRPlaneDetector,"latest");e.onPlaneAddedObservable.add((e=>{})),e.onPlaneRemovedObservable.add((e=>{})),e.onPlaneUpdatedObservable.add((e=>{}))}e.input.onControllerAddedObservable.add((t=>{console.log("controller added with handedness: "+t.inputSource.handedness),t.onMotionControllerInitObservable.add((i=>{this.arEnabled&&(this.updateLaserPointerRenderingGroup(t),e.pointerSelection.onFeatureAttachObservable.add((()=>{this.updateLaserPointerRenderingGroup(t)}))),i.onModelLoadedObservable.add((()=>{if("left"===i.handedness&&(null==this.smartwatch&&(this.smartwatch=new y(this.scene)),i.rootMesh)){const t=!1;this.smartwatch?.updateXRReferences(i.rootMesh,e,this.scene,t)}if(this.disableNearInteractionSelectionMeshes(),t.inputSource.profiles.includes("stylus")||t.inputSource.profiles.includes("logitech-mx-ink")){console.log("Stylus detected"),0==this.stylusPointerVisible&&t.pointer?.setEnabled(!1);const e=new CustomEvent(x,{detail:{activated:!0,arEnabled:this.arEnabled}});document.dispatchEvent(e),t.onDisposeObservable.add((()=>{const e=new CustomEvent(x,{detail:{activated:!1,arEnabled:this.arEnabled}});document.dispatchEvent(e)}))}}))}))}))}setXrCameraInitialPositionRotation(e){e.baseExperience.onInitialXRPoseSetObservable.add((e=>{e.position=this.currentXrCameraInitialPosition,e.rotationQuaternion=this.xrCameraInitialRotationQuaternion}))}enableNearInteraction(e,t){e.nearInteraction=t.enableFeature(o.WebXRFeatureName.NEAR_INTERACTION,"latest",{xrInput:e.input,enableNearInteractionOnAllControllers:!0})}enablePointerSelection(e,t){e.pointerSelection=t.enableFeature(o.WebXRFeatureName.POINTER_SELECTION,"latest",{xrInput:e.input,enablePointerSelectionOnAllControllers:!1,preferredHandedness:"right",disableSwitchOnClick:!0,disableScenePointerVectorUpdate:!1,maxPointerDistance:this.maxPointerDistance})}enableHandTracking(e,t){const i=0==this.arEnabled||this.arHandMeshEnabled,n=t.enableFeature(o.WebXRFeatureName.HAND_TRACKING,"latest",{xrInput:e.input,jointMeshes:{invisible:!i,disableDefaultHandMesh:!0,handMeshes:{right:this.rightHandMesh?.getChildMeshes(!0)[0],left:this.leftHandMesh?.getChildMeshes(!0)[0]},rigMapping:{right:["wrist_R","thumb_metacarpal_R","thumb_proxPhalanx_R","thumb_distPhalanx_R","thumb_tip_R","index_metacarpal_R","index_proxPhalanx_R","index_intPhalanx_R","index_distPhalanx_R","index_tip_R","middle_metacarpal_R","middle_proxPhalanx_R","middle_intPhalanx_R","middle_distPhalanx_R","middle_tip_R","ring_metacarpal_R","ring_proxPhalanx_R","ring_intPhalanx_R","ring_distPhalanx_R","ring_tip_R","little_metacarpal_R","little_proxPhalanx_R","little_intPhalanx_R","little_distPhalanx_R","little_tip_R"],left:["wrist_L","thumb_metacarpal_L","thumb_proxPhalanx_L","thumb_distPhalanx_L","thumb_tip_L","index_metacarpal_L","index_proxPhalanx_L","index_intPhalanx_L","index_distPhalanx_L","index_tip_L","middle_metacarpal_L","middle_proxPhalanx_L","middle_intPhalanx_L","middle_distPhalanx_L","middle_tip_L","ring_metacarpal_L","ring_proxPhalanx_L","ring_intPhalanx_L","ring_distPhalanx_L","ring_tip_L","little_metacarpal_L","little_proxPhalanx_L","little_intPhalanx_L","little_distPhalanx_L","little_tip_L"]}}});if(console.log("handTrackingFeature check"),null!=n)try{n.onHandAddedObservable.add((t=>{console.log("webXR hand added"),null==this.smartwatch&&(this.smartwatch=new y(this.scene)),this.webXRHandManager?.setupWebXRHand(t,this.scene,e,this.smartwatch),this.objectManipulation?.setupWebXRHand(t),this.disableNearInteractionSelectionMeshes()}))}catch(e){console.error("handTrackingFeature.onHandAddedObservable.add error",e)}else console.warn("handTrackingFeature is undefined")}setupFPSButtons(e,t=!1){const i=e.baseExperience.sessionManager;let o,n,a=!1;const r="#58BC2D",l=document.getElementById("fpsButtonsText");null!=l&&(l.innerText="Start an XR session to get a list of supported framerates (if available)"),i.onXRSessionInit.add((()=>{if(console.log("onXRSessionInit"),!a){if(null!=i.session.supportedFrameRates){const e=()=>{if(t)return a[0];{const e=localStorage.getItem(b);return null!=e?parseInt(e):a[0]}},a=i.session.supportedFrameRates;var s=document.getElementById("fpsButtons");null!=l&&(l.innerText=t?"XR framerate is set to: ":"Set XR framerate to:",s?.appendChild(l)),o=e(),console.log("Supported frame rates:"),a.forEach((e=>{console.log(e);var i=document.createElement("button");i.innerText=e+"fps",o==e&&(i.style.backgroundColor=r,n=i),t?i.disabled=!0:i.onclick=function(){console.log("Button clicked for framerate: "+e),o=e,null!=n&&(n.style.backgroundColor="white"),i.style.backgroundColor=r,n=i,localStorage.setItem(b,e.toString())},s?.appendChild(i)}))}else console.warn("No supported frame rates");a=!0}null!=o&&e.baseExperience.sessionManager.session.updateTargetFrameRate(o).then((()=>{console.log(`${o} frame rate was applied`)}))})),i.onXRSessionEnded.add((()=>{console.log("onXRSessionEnded"),this.customXRButton?.element.remove();const e=document.createElement("div");e.style.cssText="\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                gap: 20px;\n            ";const t=document.createElement("div");t.style.cssText=`\n                color: ${s.Y.primaryColor};\n                font-size: 2em;\n                font-family: ${s.Y.fontFamily};\n                text-align: center;\n            `,t.innerText="To re-enter XR, refresh the page or select another XR scene from the menu";const i=document.createElement("button");i.style.cssText=`\n                height: ${2*parseInt(s.Y.buttonHeight)}px;\n                padding: 0 40px;\n                border: none;\n                border-radius: ${s.Y.cornerRadius}px;\n                background: ${s.Y.bgColor};\n                color: ${s.Y.primaryColor};\n                font-family: ${s.Y.fontFamily};\n                font-size: ${1.5*parseInt(s.Y.fontSize)}px;\n                cursor: pointer;\n                outline: ${s.Y.outlineColor} solid 2px;\n            `,i.textContent="Refresh",i.onclick=()=>window.location.reload(),e.appendChild(t),e.appendChild(i),document.body.appendChild(e)}))}async importHandMesh(e,t,i,s){const a=(await o.SceneLoader.ImportMeshAsync("","",t,e)).meshes[0];a.name=i,a.scaling=new n.P(-1,1,1);const r=a.getChildMeshes(!0)[0];return r.material?.dispose(),r.material=s,r.isVisible=!1,a}async importHandMeshes(e){const t=o.NodeMaterial.Parse(u,e);if(t.name="handMaterial",this.arEnabled&&this.arHandMeshFullyTransparent){const t=new o.StandardMaterial("rightHandMaterial",e);t.needDepthPrePass=!0,t.alpha=0,this.leftHandMesh=await this.importHandMesh(e,p,"leftHand",t),this.rightHandMesh=await this.importHandMesh(e,m,"rightHand",t)}else this.leftHandMesh=await this.importHandMesh(e,p,"leftHand",t),this.rightHandMesh=await this.importHandMesh(e,m,"rightHand",t)}setupDummyCamera(){this.dummyCamera=new o.FreeCamera("dummyCamera",this.currentXrCameraInitialPosition.clone(),void 0,!1),this.dummyCamera.setEnabled(!1)}disableNearInteractionSelectionMeshes(){this.scene.meshes.filter((e=>"nearInteraction"===e.name)).forEach((e=>{e.setEnabled(!1),console.log(`${e.name} is set to disabled`)}))}updateLaserPointerRenderingGroup(e){this.arEnabled&&this.scene.onBeforeRenderObservable.addOnce((()=>{const t=e.pointer?.getChildMeshes(!0).find((e=>"laserPointer"===e.id));null!=t&&(t.renderingGroupId=1)}))}};var I,O;!function(e){e.DEFAULT="default",e.DOME="dome"}(I||(I={})),function(e){e.SOLID="Solid",e.WIREFRAME="Wireframe",e.POINT="Point"}(O||(O={}));class R extends T{constructor(){super(...arguments),this.cameraInitialAlpha=4.1541,this.cameraInitialBeta=1.5017,this.cameraInitialRadius=1.5,this.cameraInitialTarget=new o.Vector3(1.6,.18,2.5),this.cameraInitialLowerRadiusLimit=.2,this.cameraInitialUpperRadiusLimit=20,this.cameraInitialPanningSensibility=1e3,this.wasMeasureToolEnabled=!1,this.photoLocations=[],this.photoDomes=[],this.meshes=[],this.renderingMode=O.SOLID,this.pointSize=5,this.pointerEnabledOnStart=!1,this._currentScannedView=I.DEFAULT}set currentScannedView(e){this._currentScannedView=e,this.guiController.updateHuds(this._currentScannedView),e===I.DEFAULT&&void 0!==this.measureTool&&this.wasMeasureToolEnabled&&this.measureTool.setMeasureToolEnabled(!0)}get currentScannedView(){return this._currentScannedView}setupScannedScene(){this.xrEnabled||this.setPhotoDomeEnabled(!0)}animateToInitialCameraPosition(){this.animateArcCameraTo(this.scene,this.cameraInitialTarget,this.arcCamera?.alpha??0,this.arcCamera?.beta??0,this.cameraInitialRadius,this.cameraAnimationFPS,this.cameraAnimationDuration,0,(()=>{null!=this.arcCamera&&(this.arcCamera.lowerRadiusLimit=this.cameraInitialLowerRadiusLimit,this.arcCamera.upperRadiusLimit=this.cameraInitialUpperRadiusLimit,this.arcCamera.panningSensibility=this.cameraInitialPanningSensibility),this.currentScannedView=I.DEFAULT}))}animateToOutsidePhotoDome(){this.animateArcCameraTo(this.scene,this.activeDomeMesh.absolutePosition.clone(),this.arcCamera?.alpha??0,this.arcCamera?.beta??0,this.cameraInitialRadius,this.cameraAnimationFPS,this.cameraAnimationDuration,0,(()=>{null!=this.arcCamera&&(this.arcCamera.lowerRadiusLimit=this.cameraInitialLowerRadiusLimit,this.arcCamera.upperRadiusLimit=this.cameraInitialUpperRadiusLimit,this.arcCamera.panningSensibility=this.cameraInitialPanningSensibility),this.currentScannedView=I.DEFAULT}))}createPhotoDomes(e,t){this.photoLocations.forEach((i=>{const n=new o.PhotoDome(i.name,`${i.name}.jpg`,{resolution:32,size:.75},e);n.setParent(t,!1,!1),n.position=i.position,n.rotation=new o.Vector3(-Math.PI/2,0,0),this.photoDomes.push(n);const s=new o.ActionManager(e);n.mesh.isPickable=!this.xrEnabled,n.mesh.actionManager=s,s.registerAction(new o.ExecuteCodeAction(o.ActionManager.OnPickTrigger,(()=>{if(this.currentScannedView!==I.DOME)if(this.activeDomeMesh==n.mesh){void 0!==this.measureTool&&(this.wasMeasureToolEnabled=this.measureTool.measureToolEnabled,this.wasMeasureToolEnabled&&this.measureTool.setMeasureToolEnabled(!1));const t=()=>{this.currentScannedView=I.DOME};null!=this.arcCamera&&(this.arcCamera.lowerRadiusLimit=0,this.arcCamera.panningSensibility=0),this.animateArcCameraTo(e,n.absolutePosition.clone(),this.arcCamera?.alpha??0,this.arcCamera?.beta??0,0,this.cameraAnimationFPS,this.cameraAnimationDuration,1,t)}else this.activeDomeMesh=n.mesh,this.animateToOutsidePhotoDome()})))}))}setPhotoDomeEnabled(e){null==this.photoDomeRoot&&(this.photoDomeRoot=new o.Mesh("photoDomeRoot",this.scene,this.meshRoot),this.createPhotoDomes(this.scene,this.photoDomeRoot)),this.photoDomeRoot.setEnabled(e)}setPointSize(e){this.pointSize=e,null!=this.meshRoot.material&&(this.meshRoot.material.pointSize=e);for(const t of this.meshes)null!=t.material&&(t.material.pointSize=e)}moveControlsToXR(e){const t=this.guiController.getControls();e.addControls(t),null!=this.guiController.pointerCheckbox&&e.setupPointerCheckbox(this.guiController.pointerCheckbox,this.scene);for(const t of this.guiController.checkboxes)e.xrEnhanceCheckbox(t);for(const t of this.guiController.sliders)e.xrEnhanceSlider(t);for(const t of this.guiController.buttons)e.xrEnhanceButton(t)}switchRenderingMode(){switch(this.renderingMode){case O.SOLID:this.renderingMode=O.WIREFRAME;break;case O.WIREFRAME:this.renderingMode=O.POINT;break;case O.POINT:this.renderingMode=O.SOLID}for(const e of this.meshes)if(null!=e.material)switch(this.renderingMode){case O.SOLID:e.material.pointsCloud=!1,e.material.wireframe=!1;break;case O.WIREFRAME:e.material.wireframe=!0;break;case O.POINT:e.material.pointsCloud=!0,e.material.pointSize=this.pointSize}this.guiController.updateRenderingModeText(this.renderingMode)}}new R;const E=JSON.parse('{"root":{"tags":null,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":false,"adaptWidthToChildren":false,"background":"","metadata":{"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":false,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"100%","color":"","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"root","className":"Container","fontSize":"18px","children":[{"tags":null,"thickness":0,"cornerRadius":0,"cornerRadiusX":0,"cornerRadiusY":0,"cornerRadiusZ":0,"cornerRadiusW":0,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":false,"adaptWidthToChildren":false,"background":"#414141FF","metadata":{"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"100%","color":"#00000000","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"DevBackground","className":"Rectangle","fontSize":"18px"},{"tags":null,"thickness":1,"cornerRadius":2,"cornerRadiusX":2,"cornerRadiusY":2,"cornerRadiusZ":2,"cornerRadiusW":2,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":true,"adaptWidthToChildren":false,"background":"#000000C8","metadata":{"_previousCenter":{"x":1044.25,"y":-478.2786560058594}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":1,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"240px","height":"218px","color":"#00DDFF50","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"5px","paddingRight":"5px","paddingTop":"5px","paddingBottom":"5px","left":"-0.25px","top":"1.2213426016030375px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"Controls","className":"Rectangle","fontSize":"18px","children":[{"tags":null,"ignoreLayoutWarnings":false,"isVertical":true,"spacing":0,"width":"100%","height":"208px","delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":true,"adaptWidthToChildren":false,"background":"","metadata":{"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":true,"color":"","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"ControlsStackPanel","className":"StackPanel","fontSize":"18px","children":[{"tags":null,"thickness":1,"cornerRadius":0,"cornerRadiusX":0,"cornerRadiusY":0,"cornerRadiusZ":0,"cornerRadiusW":0,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":false,"adaptWidthToChildren":false,"background":"#CCCCCC00","metadata":{"_previousCenter":{"x":1,"y":-59}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"60px","color":"#ADE4EC00","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"CheckboxRectangle","className":"Rectangle","fontSize":"18px","children":[{"tags":null,"resizeToFit":false,"textWrapping":2,"text":"CHECKBOX","textHorizontalAlignment":2,"textVerticalAlignment":2,"lineSpacing":"0px","outlineWidth":0,"underline":false,"lineThrough":false,"applyOutlineToUnderline":false,"outlineColor":"white","wordDivider":" ","forceResizeWidth":false,"metadata":{"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":null,"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":79.5,"y":476.5}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":170.5,"y":28.5}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":163.6575927734375,"y":-32.3788948059082}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":70.85568237304688,"y":-54.70137023925781}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":false,"isPointerBlocker":false,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":2,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"#000000","hoverCursor":"","fontOffset":{"ascent":17.60003662109375,"height":22.4000244140625,"descent":4.79998779296875},"alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":1,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"100%","color":"#63EAFFFF","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"CheckboxTextblock","className":"TextBlock","fontFamily":"Exo","fontSize":"20px"},{"tags":null,"thickness":0,"checkSizeRatio":1,"background":"#00000050","isChecked":true,"metadata":{"_previousCenter":{"x":2,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":1,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"100%","color":"#00DDFF50","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"4px","paddingRight":"4px","paddingTop":"4px","paddingBottom":"4px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"Checkbox","className":"Checkbox","fontSize":"18px"}]},{"tags":null,"thickness":1,"cornerRadius":0,"cornerRadiusX":0,"cornerRadiusY":0,"cornerRadiusZ":0,"cornerRadiusW":0,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":false,"adaptWidthToChildren":false,"background":"#CCCCCC00","metadata":{"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"60px","color":"#00000000","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"60px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"SliderRectangle","className":"Rectangle","fontSize":"18px","children":[{"tags":null,"resizeToFit":false,"textWrapping":0,"text":"SLIDER","textHorizontalAlignment":2,"textVerticalAlignment":2,"lineSpacing":"0px","outlineWidth":0,"underline":false,"lineThrough":false,"applyOutlineToUnderline":false,"outlineColor":"white","wordDivider":" ","forceResizeWidth":false,"metadata":{"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":null,"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":79.5,"y":476.5}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":170.5,"y":28.5}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":163.6575927734375,"y":-32.3788948059082}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":70.85568237304688,"y":-54.70137023925781}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":false,"isPointerBlocker":false,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":0,"y":0}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"#000000","hoverCursor":"","fontOffset":{"ascent":17.60003662109375,"height":22.4000244140625,"descent":4.79998779296875},"alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":0,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":true,"width":"100%","height":"100%","color":"#63EAFFFF","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"SliderTextblock","className":"TextBlock","fontFamily":"Exo","fontSize":"20px"},{"tags":null,"displayValueBar":true,"borderColor":"#63EAFFFF","background":"#00000050","thumbColor":"","isThumbCircle":false,"displayThumb":false,"step":0,"barOffset":"5px","thumbWidth":"20px","minimum":0,"maximum":10,"value":5,"isVertical":false,"isThumbClamped":true,"metadata":{"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":{"_previousCenter":{"x":276.05120849609375,"y":-478.026123046875},"localBounds":{"left":-120.305,"top":-7.56,"right":120.305,"bottom":17.09},"storedValues":{"left":-7.462264402627355,"top":14.29113220131368,"right":233.14773559737267,"bottom":29.411132201313677}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":276.05120849609375,"y":490.973876953125}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":1.0476000010967255,"y":49.973880767822266}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":1.021475711837411,"y":-7.208990097045898}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":-1.7479851245880127,"y":-28.526857376098633}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"100%","color":"#00DDFF50","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"4px","paddingRight":"4px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"Slider","className":"Slider","fontSize":"18px"}]},{"tags":null,"thickness":1,"cornerRadius":0,"cornerRadiusX":0,"cornerRadiusY":0,"cornerRadiusZ":0,"cornerRadiusW":0,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":false,"adaptWidthToChildren":false,"background":"#00000050","metadata":{"_previousCenter":{"x":1,"y":61},"localBounds":{"left":-89.9775,"top":-30,"right":180.03,"bottom":30},"storedValues":{"left":-39.98,"top":120,"right":139.97500000000002,"bottom":180}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"60px","color":"#00DDFF50","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"4px","paddingRight":"4px","paddingTop":"4px","paddingBottom":"4px","left":"0px","top":"120px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"Button","className":"Button","fontSize":"18px","children":[{"tags":null,"resizeToFit":false,"textWrapping":0,"text":"BUTTON","textHorizontalAlignment":2,"textVerticalAlignment":2,"lineSpacing":"0px","outlineWidth":0,"underline":false,"lineThrough":false,"applyOutlineToUnderline":false,"outlineColor":"white","wordDivider":" ","forceResizeWidth":false,"metadata":{"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":false,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","fontOffset":{"ascent":17.60003662109375,"height":22.4000244140625,"descent":4.79998779296875},"alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":true,"width":"100%","height":"100%","color":"#3FA1B1FF","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"ButtonTextblock","className":"TextBlock","fontFamily":"Exo","fontSize":"20px"}],"textBlockName":"ButtonTextblock"},{"tags":null,"resizeToFit":true,"textWrapping":1,"text":"Info text","textHorizontalAlignment":0,"textVerticalAlignment":2,"lineSpacing":"0px","outlineWidth":0,"underline":false,"lineThrough":false,"applyOutlineToUnderline":false,"outlineColor":"white","wordDivider":" ","forceResizeWidth":false,"metadata":{"_previousCenter":{"x":1,"y":91}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","fontOffset":{"ascent":15.20001220703125,"height":20,"descent":4.79998779296875},"alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"99.65%","height":"28px","color":"#3FA1B1FF","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"4px","paddingRight":"4px","paddingTop":"4px","paddingBottom":"4px","left":"0px","top":"180px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"InfoTextblock","className":"TextBlock","fontFamily":"Exo","fontSize":"17px"}],"manualWidth":true,"manualHeight":true}]},{"tags":null,"thickness":1,"cornerRadius":0,"cornerRadiusX":0,"cornerRadiusY":0,"cornerRadiusZ":0,"cornerRadiusW":0,"delegatePickingToChildren":false,"renderToIntermediateTexture":false,"maxLayoutCycle":3,"adaptHeightToChildren":false,"adaptWidthToChildren":false,"background":"#33333300","metadata":{"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":null,"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[],"_previousCenter":{"x":1,"y":1}},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":false,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":5,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onPointerDownStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onPointerEnterStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onPointerOutStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onDisposeStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"_previousCenter":{"x":819.5,"y":-528.5}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":1,"verticalAlignment":0,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100px","height":"100px","color":"#FFFFFF00","zIndex":0,"notRenderable":false,"isVisible":false,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"-295px","top":"10px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"ExitButton","className":"Button","fontSize":"18px","children":[{"tags":null,"sourceLeft":0,"sourceTop":0,"sourceWidth":0,"sourceHeight":0,"populateNinePatchSlicesFromImage":false,"autoScale":false,"stretch":1,"source":"./player_close_icon.png","cellWidth":0,"cellHeight":0,"cellId":-1,"metadata":{"metadata":{"guiEditor":true,"metadata":{"guiEditor":true,"metadata":null,"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":2,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[],"onPointerDownStored":[],"onPointerEnterStored":[],"onPointerOutStored":[],"onDisposeStored":[]},"isHighlighted":false,"highlightLineWidth":5,"isReadOnly":true,"isHitTestVisible":true,"isPointerBlocker":true,"onPointerUpStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onPointerDownStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onPointerEnterStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onPointerOutStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"onDisposeStored":[{"mask":-1,"scope":null,"_willBeUnregistered":false,"unregisterOnNextCall":false}],"_previousCenter":{"x":1,"y":1}},"isHitTestVisible":true,"isPointerBlocker":true,"isFocusInvisible":false,"clipChildren":true,"clipContent":true,"useBitmapCache":false,"shadowOffsetX":0,"shadowOffsetY":0,"shadowBlur":0,"shadowColor":"black","hoverCursor":"","alpha":1,"isSerializable":true,"scaleX":1,"scaleY":1,"rotation":0,"transformCenterY":0.5,"transformCenterX":0.5,"horizontalAlignment":2,"verticalAlignment":2,"fixedRatio":0,"fixedRatioMasterIsWidth":false,"width":"100%","height":"100%","color":"transparent","zIndex":0,"notRenderable":false,"isVisible":true,"descendantsOnlyPadding":false,"paddingLeft":"0px","paddingRight":"0px","paddingTop":"0px","paddingBottom":"0px","left":"0px","top":"0px","linkOffsetX":"0px","linkOffsetY":"0px","isEnabled":true,"disabledColor":"#9a9a9a","disabledColorItem":"#6a6a6a","name":"ExitButtonImage","className":"Image","fontSize":"18px"}]}]},"width":2327,"height":1179}');class k extends s.Y{constructor(){super(...arguments),this.photosEnabled=!1,this.measureToolEnabled=!1,this.pointCloudEnabled=!1,this.pointerButtonEnabled=!1,this.renderingModeButtonEnabled=!0,this.checkboxes=[],this.sliders=[],this.buttons=[],this.defaultPointSize=5,this.minimumPointSize=0,this.maximumPointSize=10,this.goBack=e=>{e.animateToOutsidePhotoDome()},this.cloneSliderRectangle=(e,t=.5,i=0,o=1)=>{const n=this.guiAdvancedTexture.getControlByName("SliderRectangle"),s=n.getChildByName("SliderTextblock"),a=n.clone(this.guiAdvancedTexture),r=a.getChildByName("Slider");r.minimum=i,r.maximum=o,r.value=t;const l=a.getChildByName("SliderTextblock");return l.fontFamily=s.fontFamily,l.fontOffset=s.fontOffset,l.fontSize=s.fontSize,l.fontStyle=s.fontStyle,l.fontWeight=s.fontWeight,l.text=e,this.guiAdvancedTexture.getControlByName("ControlsStackPanel").addControl(a),this.sliders.push(r),a.isVisible=!0,r},this.cloneCheckboxRectangle=(e,t=!1)=>{const i=this.guiAdvancedTexture.getControlByName("CheckboxRectangle"),o=i.getChildByName("CheckboxTextblock"),n=i.clone(this.guiAdvancedTexture),s=n.getChildByName("Checkbox");s.isChecked=t;const a=n.getChildByName("CheckboxTextblock");return a.text=e,a.fontFamily=o.fontFamily,a.fontOffset=o.fontOffset,a.fontSize=o.fontSize,a.fontStyle=o.fontStyle,a.fontWeight=o.fontWeight,this.guiAdvancedTexture.getControlByName("ControlsStackPanel").addControl(n),this.checkboxes.push(s),n.isVisible=!0,s},this.cloneButton=e=>{const t=this.guiAdvancedTexture.getControlByName("Button"),i=t.getChildByName("ButtonTextblock"),o=t.clone(this.guiAdvancedTexture),n=o.getChildByName("ButtonTextblock");return n.text=e,n.fontFamily=i.fontFamily,n.fontOffset=i.fontOffset,n.fontSize=i.fontSize,n.fontStyle=i.fontStyle,n.fontWeight=i.fontWeight,this.guiAdvancedTexture.getControlByName("ControlsStackPanel").addControl(o),this.buttons.push(o),o.isVisible=!0,o},this.cloneInfoTextblock=e=>{const t=this.guiAdvancedTexture.getControlByName("InfoTextblock"),i=t.clone(this.guiAdvancedTexture);return i.text=e,i.fontFamily=t.fontFamily,i.fontOffset=t.fontOffset,i.fontSize=t.fontSize,i.fontStyle=t.fontStyle,i.fontWeight=t.fontWeight,this.guiAdvancedTexture.getControlByName("ControlsStackPanel").addControl(i),i.isVisible=!0,i}}async setupGUI(e){super.setupGUI(e,E),this.exitButton=this.guiAdvancedTexture.getControlByName("ExitButton"),this.exitButton.isVisible=!1,this.exitButton.onPointerClickObservable.add((()=>{this.goBack(e)}));const t=this.measureToolEnabled,i=this.renderingModeButtonEnabled&&0==this.pointCloudEnabled&&0==e.xrEnabled,o=i||this.pointCloudEnabled;this.photosEnabled&&this.cloneCheckboxRectangle("360 PHOTOS",null!=e.photoDomeRoot&&e.photoDomeRoot.isEnabled()).onIsCheckedChangedObservable.add((t=>{e.setPhotoDomeEnabled(t)})),t&&(this.measureToolCheckbox=this.cloneCheckboxRectangle("MEASURE TOOL",!1),this.measureToolCheckbox.onIsCheckedChangedObservable.add((t=>{e.measureTool?.setMeasureToolEnabled(t),e.wasMeasureToolEnabled=t}))),o&&(e.setPointSize(this.defaultPointSize),this.cloneSliderRectangle("POINT SIZE",this.defaultPointSize,this.minimumPointSize,this.maximumPointSize).onValueChangedObservable.add((t=>{e.setPointSize(t)}))),i&&(this.cloneButton("RENDERING MODE").onPointerClickObservable.add((()=>{e.switchRenderingMode()})),this.renderingModeTextblock=this.cloneInfoTextblock(""),this.updateRenderingModeText(O.SOLID)),e.xrEnabled&&(this.pointerButtonEnabled&&(this.pointerCheckbox=this.cloneCheckboxRectangle("POINTER",!0)),this.cloneButton("RESET").onPointerClickObservable.add((()=>{const e=new CustomEvent("resetSelf");document.dispatchEvent(e)})),e.teleportationEnabled&&this.cloneInfoTextblock("Left pinch 🤏: teleport"),e.pointerEnabledOnStart&&this.cloneInfoTextblock("Right pinch 🤏: use pointer"),this.guiAdvancedTexture.getControlByName("Controls").isVisible=!1),this.pointCloudEnabled&&(this.pointCountTextblock=this.cloneInfoTextblock("")),this.hidePrefabControls(),window.addEventListener("keydown",(t=>{"Escape"===t.key&&e.currentScannedView===I.DOME&&this.goBack(e)}))}hidePrefabControls(){this.guiAdvancedTexture.getControlByName("SliderRectangle").isVisible=!1,this.guiAdvancedTexture.getControlByName("CheckboxRectangle").isVisible=!1,this.guiAdvancedTexture.getControlByName("Button").isVisible=!1,this.guiAdvancedTexture.getControlByName("InfoTextblock").isVisible=!1}getControls(){const e=this.guiAdvancedTexture.getControlByName("Controls");return e.isVisible=!0,this.guiAdvancedTexture.removeControl(e),e}updateHuds(e){this.exitButton.isVisible=e!=I.DEFAULT}updatePointCount(e){if(this.pointCountTextblock){const t=e.toString().replace(/\B(?=(\d{3})+(?!\d))/g," ");this.pointCountTextblock.text=`Point count: ${t}`}}updateRenderingModeText(e){this.renderingModeTextblock&&(this.renderingModeTextblock.text=e)}}class B extends k{constructor(){super(...arguments),this.photosEnabled=!1,this.measureToolEnabled=!1,this.pointCloudEnabled=!1,this.pointerButtonEnabled=!1,this.renderingModeButtonEnabled=!1}async setupGUI(e){super.setupGUI(e),this.cloneSliderRectangle("BARRIER SIZE",e.safetySphereDefaultSize,e.safetySphereMinSize,e.safetySphereMaxSize).onValueChangedObservable.add((t=>{e.updateSafetySphereSize(t)}));const t=this.cloneCheckboxRectangle("SHOW BARRIER");t.isChecked=!0,t.onIsCheckedChangedObservable.add((t=>{e.safetySphere.isVisible=t})),this.cloneButton("SEND CURRENT POSE").onPointerClickObservable.add((()=>{console.log("Current Pose button pressed"),e.ur3cb3?.moveToJointAngles(e.rosController)})),this.createConnectionStatusText()}createConnectionStatusText(){this.connectionStatusText=this.cloneInfoTextblock("ROSBridge: Disconnected"),this.connectionStatusText.color="red",document.addEventListener("rosBridgeConnectionChanged",(e=>{this.updateConnectionStatus(e.detail.connected)}))}updateConnectionStatus(e){this.connectionStatusText&&(this.connectionStatusText.text=e?"ROSBridge: Connected":"ROSBridge: Disconnected",this.connectionStatusText.color=e?"green":"red")}}B.animationToggle=0;const M=i.p+"importattu_quick-vr-optimize.babylon";class N{constructor(e,t){this.animationFrames=180,this.scene=t,this.baseMesh=e,this.ur3=e.getChildMeshes()[0],this.shoulder=this.ur3.getChildMeshes()[0],this.elbow=this.shoulder.getChildMeshes()[0],this.wrist01=this.elbow.getChildMeshes()[0],this.wrist02=this.wrist01.getChildMeshes()[0],this.wrist03=this.wrist02.getChildMeshes()[0],this.effectorJoint=this.wrist03.getChildMeshes()[0],document.addEventListener("actionFeedback",(e=>this.handleFeedback(e.detail)))}resetJoints(){console.log("resetJoints"),this.ur3.rotationQuaternion=null,this.shoulder.rotationQuaternion=null,this.elbow.rotationQuaternion=null,this.wrist01.rotationQuaternion=null,this.wrist02.rotationQuaternion=null,this.wrist03.rotationQuaternion=null,this.effectorJoint.rotationQuaternion=null}randomJoints(){console.log("randomJoints"),this.animateRotation(this.ur3,o.Vector3.Up(),Math.random()*Math.PI*2),this.animateRotation(this.shoulder,o.Vector3.Forward(),Math.random()*Math.PI*2),this.animateRotation(this.elbow,o.Vector3.Forward(),Math.random()*Math.PI*2),this.animateRotation(this.wrist01,o.Vector3.Up(),Math.random()*Math.PI*2),this.animateRotation(this.wrist02,o.Vector3.Forward(),Math.random()*Math.PI*2),this.animateRotation(this.wrist03,o.Vector3.Up(),Math.random()*Math.PI*2),this.animateRotation(this.effectorJoint,o.Vector3.Forward(),Math.random()*Math.PI*2)}getJointDirection(e){return e==this.ur3||e==this.wrist03||e==this.wrist01?o.Vector3.Up():o.Vector3.Forward()}getJointRotationOffset(e){return e==this.shoulder?Math.PI/2:e==this.wrist01?Math.PI/4:e==this.wrist02?Math.PI/2:0}animateRotation(e,t,i){const n=new o.Animation("randomRotation","rotationQuaternion",30,o.Animation.ANIMATIONTYPE_QUATERNION,o.Animation.ANIMATIONLOOPMODE_CYCLE),s=e.rotationQuaternion,a=o.Quaternion.RotationAxis(t,i),r=[{frame:0,value:s},{frame:this.animationFrames,value:a}];n.setKeys(r),e.animations=[n],this.scene.beginAnimation(e,0,this.animationFrames,!1)}setRotation(e,t,i){e.rotationQuaternion=o.Quaternion.RotationAxis(t,i)}handleFeedback(e,t=!1){const i=e.joint_names,o=e.actual.positions;for(let e=0;e<i.length;e++){const n=i[e],s=o[e],a=this.getJointMesh(n);if(a){const e=this.getJointDirection(a),i=this.getJointRotationOffset(a)+s;t?this.animateRotation(a,e,i):this.setRotation(a,e,i)}}}getJointMesh(e){switch(e){case"shoulder_pan_joint":return this.ur3;case"shoulder_lift_joint":return this.shoulder;case"elbow_joint":return this.elbow;case"wrist_1_joint":return this.wrist02;case"wrist_2_joint":return this.wrist03;case"wrist_3_joint":return this.effectorJoint;default:return null}}getCurrentJointAngles(){const e={};return[{name:"shoulder_pan_joint",mesh:this.ur3},{name:"shoulder_lift_joint",mesh:this.shoulder},{name:"elbow_joint",mesh:this.elbow},{name:"wrist_1_joint",mesh:this.wrist02},{name:"wrist_2_joint",mesh:this.wrist03},{name:"wrist_3_joint",mesh:this.effectorJoint}].forEach((t=>{if(t.mesh.rotationQuaternion){const i=this.getJointDirection(t.mesh),n=t.mesh.rotationQuaternion.toEulerAngles();i.equals(o.Vector3.Forward())?e[t.name]=n.z-this.getJointRotationOffset(t.mesh):i.equals(o.Vector3.Up())?e[t.name]=n.y-this.getJointRotationOffset(t.mesh):e[t.name]=n.x-this.getJointRotationOffset(t.mesh)}})),e}toROS2JointState(){const e=this.getCurrentJointAngles();return{joint_names:["shoulder_pan_joint","shoulder_lift_joint","elbow_joint","wrist_1_joint","wrist_2_joint","wrist_3_joint"],position:[e.shoulder_pan_joint||0,e.shoulder_lift_joint||0,e.elbow_joint||0,e.wrist_1_joint||0,e.wrist_2_joint||0,e.wrist_3_joint||0],velocity:[0,0,0,0,0,0],effort:[0,0,0,0,0,0]}}toROS2JointTrajectory(){const e=this.getCurrentJointAngles(),t=["shoulder_pan_joint","shoulder_lift_joint","elbow_joint","wrist_1_joint","wrist_2_joint","wrist_3_joint"],i=t.map((t=>e[t]||0));return{joint_names:t,position:i}}async moveToJointAngles(e){const t=this.toROS2JointTrajectory();try{await e.executeTrajectory(t.position),console.log("Movement completed successfully")}catch(e){console.error("Movement failed:",e)}}}var A=i(36158);class _{constructor(e,t){this.robotMeshes=[],this.robotConfig={},this.logMovePosition=!1,console.log("Initializing UR3IK..."),this.ur3=e.getChildMeshes()[0],this.shoulder=this.ur3.getChildMeshes()[0],this.elbow=this.shoulder.getChildMeshes()[0],this.wrist01=this.elbow.getChildMeshes()[0],this.wrist02=this.wrist01.getChildMeshes()[0],this.wrist03=this.wrist02.getChildMeshes()[0],this.effectorJoint=this.wrist03.getChildMeshes()[0],this.robotMeshes=[this.ur3,this.shoulder,this.elbow,this.wrist01,this.wrist02,this.wrist03,this.effectorJoint],this.jointsLocalPosition=[this.ur3.position.clone(),this.shoulder.position.clone(),this.elbow.position.clone(),this.wrist01.position.clone(),this.wrist02.position.clone(),this.wrist03.position.clone(),this.effectorJoint.position.clone()];const i=(e,t)=>{const i=e.getAbsolutePosition(),n=t.getAbsolutePosition(),s=o.Vector3.Distance(i,n);return parseFloat(s.toFixed(6))},n=i(this.ur3,this.shoulder),s=i(this.shoulder,this.elbow),a=i(this.elbow,this.wrist01),r=i(this.wrist01,this.wrist02),l=i(this.wrist02,this.wrist03),d=i(this.wrist03,this.effectorJoint);this.robotConfig={v1:n,v2:s,v3:a,v4:r,v5:l,v6:d},console.log("Calculated joint distances:",{v1:`${n}m (Base to Shoulder)`,v2:`${s}m (Shoulder to Elbow)`,v3:`${a}m (Elbow to Wrist1)`,v4:`${r}m (Wrist1 to Wrist2)`,v5:`${l}m (Wrist2 to Wrist3)`,v6:`${d}m (Wrist3 to Flange)`}),this.jointsWorldPosition=[this.ur3.getAbsolutePosition().clone(),this.shoulder.getAbsolutePosition().clone(),this.elbow.getAbsolutePosition().clone(),this.wrist01.getAbsolutePosition().clone(),this.wrist02.getAbsolutePosition().clone(),this.wrist03.getAbsolutePosition().clone(),this.effectorJoint.getAbsolutePosition().clone()],console.log("UR3IK initialization complete"),console.log("Robot configuration:",this.robotConfig),console.log("Initial joint world positions:",this.jointsWorldPosition)}moveToPosition(e,t=0,i=0,n=0){try{this.logMovePosition&&console.log("Moving to position:",{target:{x:e.x,y:e.y,z:e.z},rotation:{r1:t,r2:i,r3:n}});const s=-.1,a=this.offsetPointOnCircle({x:e.x,y:e.z},s),r=-.04,l=a.x,d=a.y,c=e.y+r;this.logMovePosition&&console.log("Calculating IK for position:",{x:l,y:d,z:c});const h=(0,A.S)(l,d,c,t,i,n,this.robotConfig);if(h.some((e=>isNaN(e))))return this.logMovePosition&&console.warn("IK solution contains NaN values"),!1;if(!h)return this.logMovePosition&&console.warn("IK solution not found for position:",{x:l,y:d,z:c}),!1;this.logMovePosition&&console.log("IK solution found:",{base:h[0],shoulder:h[1],elbow:h[2],wrist1:h[3],wrist2:h[4],wrist3:h[5]}),this.ur3.rotationQuaternion=o.Quaternion.FromEulerAngles(0,h[0],0),this.shoulder.rotationQuaternion=o.Quaternion.FromEulerAngles(0,0,h[1]),this.elbow.rotationQuaternion=o.Quaternion.FromEulerAngles(0,0,h[2]),this.wrist01.rotationQuaternion=o.Quaternion.FromEulerAngles(0,h[3],0),this.wrist02.rotationQuaternion=o.Quaternion.FromEulerAngles(0,0,h[4]),this.wrist03.rotationQuaternion=o.Quaternion.FromEulerAngles(0,h[5],0),this.logMovePosition&&console.log("Applied joint rotations");const u=this.getCurrentEndEffectorPosition();return this.logMovePosition&&console.log("Final end effector position:",{x:u.x,y:u.y,z:u.z}),!0}catch(t){return console.error("IK calculation failed:",t),console.error("Target position was:",e),console.error("Current joint angles:",this.getCurrentJointAngles()),!1}}offsetPointOnCircle(e,t){const i=Math.sqrt(e.x*e.x+e.y*e.y),o=Math.atan2(e.y,e.x)-t/i;return{x:i*Math.cos(o),y:i*Math.sin(o)}}restoreHierarchy(){console.log("Restoring robot hierarchy..."),this.ur3.setParent(null),this.shoulder.setParent(this.ur3),this.elbow.setParent(this.shoulder),this.wrist01.setParent(this.elbow),this.wrist02.setParent(this.wrist01),this.wrist03.setParent(this.wrist02),this.effectorJoint.setParent(this.wrist03),this.ur3.position=this.jointsLocalPosition[0],this.shoulder.position=this.jointsLocalPosition[1],this.elbow.position=this.jointsLocalPosition[2],this.wrist01.position=this.jointsLocalPosition[3],this.wrist02.position=this.jointsLocalPosition[4],this.wrist03.position=this.jointsLocalPosition[5],this.effectorJoint.position=this.jointsLocalPosition[6],console.log("Robot hierarchy restored")}getCurrentEndEffectorPosition(){return this.effectorJoint.getAbsolutePosition()}getCurrentJointAngles(){return[this.ur3.rotation.y,this.shoulder.rotation.x,this.elbow.rotation.x,this.wrist01.rotation.x,this.wrist02.rotation.x,this.wrist03.rotation.x]}}var L=i(35893);class V{positionCommandPublisher;actionClient;goal;connected=!1;constructor(){const e=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.hostname}:9090`;console.log(`Connecting to ROSBridge at: ${e}`),this.ros=new L.Ros({url:e}),this.ros.on("error",(e=>{console.error("Error connecting to ROS:",e),this.connected=!1;const t=new CustomEvent("rosBridgeConnectionChanged",{detail:{connected:!1}});document.dispatchEvent(t)})),this.ros.on("connection",(()=>{console.log("Connected to ROSBridge server."),this.connected=!0;const e=new CustomEvent("rosBridgeConnectionChanged",{detail:{connected:!0}});document.dispatchEvent(e)})),this.ros.on("close",(()=>{console.log("Connection to ROSBridge server closed."),this.connected=!1;const e=new CustomEvent("rosBridgeConnectionChanged",{detail:{connected:!1}});document.dispatchEvent(e)})),this.positionCommandPublisher=new L.Topic({ros:this.ros,name:"/robot_position_command",messageType:"geometry_msgs/Vector3"}),this.trajectoryPublisher=new L.Topic({ros:this.ros,name:"/scaled_joint_trajectory_controller/command",messageType:"trajectory_msgs/JointTrajectory"}),this.jointLimits={shoulder_pan_joint:{min:-3.14,max:3.14,maxVel:1},shoulder_lift_joint:{min:-3.14,max:3.14,maxVel:1},elbow_joint:{min:-3.14,max:3.14,maxVel:1},wrist_1_joint:{min:-3.14,max:3.14,maxVel:1},wrist_2_joint:{min:-3.14,max:3.14,maxVel:1},wrist_3_joint:{min:-3.14,max:3.14,maxVel:1}},this.actionClient=new L.Action({ros:this.ros,name:"/scaled_joint_trajectory_controller/follow_joint_trajectory",actionType:"control_msgs/FollowJointTrajectory"}),this.goal=new L.ActionGoal({trajectory:{joint_names:["shoulder_pan_joint","shoulder_lift_joint","elbow_joint","wrist_1_joint","wrist_2_joint","wrist_3_joint"],points:[{positions:[3.02,-1.63,-1.88,1.01,1.51,1.13],time_from_start:{sec:5,nanosec:500}},{positions:[-1.01,.38,-.63,-.88,.25,-1.63],time_from_start:{sec:6,nanosec:500}},{positions:[-1.01,.38,-.63,-.88,.25,6.2],time_from_start:{sec:50,nanosec:500}}]},goal_tolerance:[{name:"shoulder_pan_joint",position:.01},{name:"shoulder_lift_joint",position:.01},{name:"elbow_joint",position:.01},{name:"wrist_1_joint",position:.01},{name:"wrist_2_joint",position:.01},{name:"wrist_3_joint",position:.01}]}),this.initJointStateSubscriber()}getRos(){return this.ros}sendPositionCommand(e,t,i){const o={x:e,y:t,z:i};this.positionCommandPublisher.publish(o)}sendJointTrajectory(e){if(!this.isWithinJointLimits(e.position))return void console.error("Joint positions exceed safety limits");const t=this.calculateTrajectoryDuration(e.position),i={joint_names:e.joint_names,points:[{positions:e.position,velocities:new Array(e.position.length).fill(0),accelerations:new Array(e.position.length).fill(0),time_from_start:{sec:Math.floor(t),nanosec:t%1*1e9|0}}]};this.trajectoryPublisher.publish(i)}isWithinJointLimits(e){const t=Object.keys(this.jointLimits);return e.every(((e,i)=>{const o=this.jointLimits[t[i]];return e>=o.min&&e<=o.max}))}calculateTrajectoryDuration(e){const t=this.getCurrentJointPositions();let i=0;return Object.keys(this.jointLimits).forEach(((o,n)=>{const s=Math.abs(e[n]-t[n])/this.jointLimits[o].maxVel;i=Math.max(i,s)})),1.5*i}getCurrentJointPositions(){return new Array(6).fill(0)}executeTrajectory(e,t=5,i=!1){const o=new L.ActionGoal({trajectory:{joint_names:Object.keys(this.jointLimits),points:[{positions:e,velocities:new Array(e.length).fill(0),accelerations:new Array(e.length).fill(0),time_from_start:{sec:t,nanosec:0}}]}});return new Promise(((e,t)=>{this.actionClient.sendGoal(o,(t=>e(t)),(e=>{if(i){const t=new CustomEvent("actionFeedback",{detail:e});document.dispatchEvent(t)}}))}))}initJointStateSubscriber(){console.log("Initializing joint state subscriber"),this.lastKnownJointPositions=new Array(6).fill(0),this.jointStateSubscriber=new L.Topic({ros:this.ros,name:"/joint_states",messageType:"sensor_msgs/JointState"}),console.log("Subscribing to /joint_states topic"),this.jointStateSubscriber.subscribe((e=>{console.log("Received joint state message:",e);const t=Object.keys(this.jointLimits);t.forEach(((t,i)=>{const o=e.name.indexOf(t);-1!==o&&(this.lastKnownJointPositions[i]=e.position[o],console.log(`Joint ${t} position: ${this.lastKnownJointPositions[i]}`))}));const i={joint_names:t,actual:{positions:this.lastKnownJointPositions},desired:{positions:[...this.lastKnownJointPositions]},error:{positions:new Array(this.lastKnownJointPositions.length).fill(0)}},o=new CustomEvent("actionFeedback",{detail:i});console.log("Dispatching actionFeedback event with positions:",this.lastKnownJointPositions),document.dispatchEvent(o),this.jointStateSubscriber.unsubscribe(),console.log("Unsubscribed from /joint_states topic after receiving first message")}))}moveUR5eRobot(){console.log("moveUR5eRobot"),this.actionClient.sendGoal(this.goal,(e=>{console.log("Result for action goal on "+this.actionClient.name+": "+e.result.sequence)}),(e=>{const t=new CustomEvent("actionFeedback",{detail:e});document.dispatchEvent(t)}))}}var F=i(7614);class D{OVCamera;OVScreen;sessionCamera;sessionScreen;videoPublisher;videoPublisherVideoTrack;myUserName;mySessionId;screensharing=!1;publishVideo=!1;constructor(){console.log("OpenViduController constructor"),window.onbeforeunload=()=>{console.log("OpenViduController onbeforeunload"),this.sessionCamera&&this.sessionCamera.disconnect(),this.sessionScreen&&this.sessionScreen.disconnect()},window.addEventListener("load",(()=>{console.log("OpenViduController window load"),this.generateParticipantInfo()})),document.getElementById("joinSessionForm").addEventListener("submit",(e=>{console.log("OpenViduController joinSessionForm submit"),e.preventDefault(),this.joinSession()}));var e=document.getElementById("joinSessionForm"),t=`\n        <p>\n            <span style="color: red;">\n            Accept the selfsigned certificate of the server first:\n            </span>\n            <br>\n            <a href="${this.APPLICATION_SERVER_URL}" target="_blank">Accept the certificate here</a>\n        </p>\n        `;e.insertAdjacentHTML("beforebegin",t),document.getElementById("buttonLeaveSession").addEventListener("mouseup",(()=>{this.leaveSession()})),document.getElementById("buttonScreenShare").addEventListener("mouseup",(()=>{this.publishScreenShare()})),navigator.mediaDevices.enumerateDevices().then((e=>{var t=e.some((e=>"videoinput"===e.kind));t?console.log("This device has a webcam"):console.log("This device does not have a webcam"),this.publishVideo=t})).catch((e=>{console.log(e.name+": "+e.message)}))}joinSession(){console.log("OpenViduController joinSession"),this.mySessionId=document.getElementById("sessionId").value,this.myUserName=document.getElementById("userName").value,this.OVCamera=new F.OpenVidu,this.OVScreen=new F.OpenVidu,this.sessionCamera=this.OVCamera.initSession(),this.sessionScreen=this.OVScreen.initSession(),this.sessionCamera.on("streamCreated",(e=>{if(console.log("OpenViduController sessionCamera streamCreated"),console.log(e),console.log("OpenViduController sessionCamera streamCreated typeOfVideo: "+e.stream.typeOfVideo),"CAMERA"==e.stream.typeOfVideo){console.log("OpenViduController sessionCamera streamCreated CAMERA. Subscribe to audio and video");const t=this.sessionCamera.subscribe(e.stream,"container-cameras");t.on("videoElementCreated",(e=>{this.appendUserData(e.element,t.stream.connection)}))}else console.log("OpenViduController Subscribe to audio only"),this.sessionCamera.subscribe(e.stream,"container-cameras")})),this.sessionScreen.on("streamCreated",(e=>{if(console.log("OpenViduController sessionScreen streamCreated"),"SCREEN"==e.stream.typeOfVideo){const t=this.sessionScreen.subscribe(e.stream,"container-screens");t.on("videoElementCreated",(e=>{this.appendUserData(e.element,t.stream.connection)}))}})),this.sessionCamera.on("streamDestroyed",(e=>{console.log("OpenViduController sessionCamera streamDestroyed"),this.removeUserData(e.stream.connection)})),this.sessionCamera.on("exception",(e=>{console.log("OpenViduController sessionCamera exception"),console.warn(e)})),this.getToken(this.mySessionId).then((e=>{console.log("OpenViduController sessionCamera getToken"),console.log(e),this.sessionCamera.connect(e,{clientData:this.myUserName}).then((()=>{console.log("OpenViduController sessionCamera connect"),document.getElementById("session-title").innerText=this.mySessionId,document.getElementById("join").style.display="none",document.getElementById("session").style.display="block",console.log("this.publishVideo: "+this.publishVideo),this.videoPublisher=this.OVCamera.initPublisher("container-cameras",{audioSource:void 0,videoSource:null!=this.videoPublisherVideoTrack?this.videoPublisherVideoTrack:this.publishVideo,publishAudio:!0,publishVideo:this.publishVideo,resolution:"640x480",frameRate:30,insertMode:"APPEND",mirror:!1}),this.videoPublisher.on("videoElementCreated",(e=>{console.log("OpenViduController sessionCamera videoElementCreated"),this.initMainVideo(e.element,this.myUserName),this.appendUserData(e.element,this.myUserName),e.element.muted=!0})),this.sessionCamera.publish(this.videoPublisher)})).catch((e=>{console.log("There was an error connecting to the session:",e.code,e.message)}))})),this.getToken(this.mySessionId).then((e=>{console.log("OpenViduController sessionScreen getToken"),console.log(e),this.sessionScreen.connect(e,{clientData:this.myUserName}).then((()=>{console.log("OpenViduController sessionScreen connect"),document.getElementById("buttonScreenShare").style.visibility="visible",console.log("Session screen connected")})).catch((e=>{console.warn("There was an error connecting to the session for screen share:",e.code,e.message)}))}))}publishScreenShare(){console.log("OpenViduController publishScreenShare");let e=this.OVScreen.initPublisher("container-screens",{videoSource:"screen"});e.once("accessAllowed",(t=>{console.log("OpenViduController publishScreenShare accessAllowed"),document.getElementById("buttonScreenShare").style.visibility="hidden",this.screensharing=!0,e.stream.getMediaStream().getVideoTracks()[0].addEventListener("ended",(()=>{console.log('User pressed the "Stop sharing" button'),this.sessionScreen.unpublish(e),document.getElementById("buttonScreenShare").style.visibility="visible",this.screensharing=!1})),this.sessionScreen.publish(e)})),e.on("videoElementCreated",(e=>{console.log("OpenViduController publishScreenShare videoElementCreated"),this.appendUserData(e.element,this.sessionScreen.connection),e.element.muted=!0})),e.once("accessDenied",(e=>{console.log("OpenViduController publishScreenShare accessDenied"),console.error("Screen Share: Access Denied")}))}leaveSession(){console.log("OpenViduController leaveSession"),this.sessionScreen?.disconnect(),this.sessionCamera?.disconnect(),this.removeAllUserData(),document.getElementById("join").style.display="block",document.getElementById("session").style.display="none",this.screensharing=!1}generateParticipantInfo(){console.log("OpenViduController generateParticipantInfo"),document.getElementById("sessionId").value="SessionScreenA",document.getElementById("userName").value="Participant"+Math.floor(100*Math.random())}appendUserData(e,t){let i,o;console.log("OpenViduController appendUserData"),"string"==typeof t?(i=t,o=t):(i=JSON.parse(t.data).clientData,o=t.connectionId);let n=document.createElement("div");n.className="data-node",n.id="data-"+o,n.innerHTML="<p>"+i+"</p>",e.parentNode.insertBefore(n,e.nextSibling),this.addClickListener(e,i)}removeUserData(e){console.log("OpenViduController removeUserData");let t=document.getElementById("data-"+e.connectionId);t&&t.parentNode.removeChild(t)}removeAllUserData(){console.log("OpenViduController removeAllUserData");let e=document.getElementsByClassName("data-node");for(;e[0];)e[0].parentNode.removeChild(e[0])}addClickListener(e,t){console.log("OpenViduController addClickListener"),e.addEventListener("click",(function(){console.log("OpenViduController addClickListener click");let i=document.querySelector("#main-video video");if(i.srcObject!==e.srcObject){let o=document.querySelector("#main-video");o.style.display="none",document.querySelector("#main-video p").innerHTML=t,i.srcObject=e.srcObject,o.style.display="block";let n=new CustomEvent("mainVideoChanged",{detail:{videoElement:e}});document.dispatchEvent(n)}}))}initMainVideo(e,t){console.log("OpenViduController initMainVideo"),document.querySelector("#main-video video").srcObject=e.srcObject,document.querySelector("#main-video p").innerHTML=t,document.querySelector("#main-video video").muted=!0;let i=new CustomEvent("mainVideoInitialized",{detail:{videoElement:e}});document.dispatchEvent(i)}APPLICATION_SERVER_URL="https://192.168.50.249:5001/";getToken(e){return console.log("OpenViduController getToken "+e),this.createSession(e).then((e=>this.createToken(e)))}createSession(e){console.log("OpenViduController createSession");const t={customSessionId:e},i=JSON.stringify(t);return fetch(this.APPLICATION_SERVER_URL+"api/sessions",{method:"POST",headers:{"Content-Type":"application/json"},body:i}).then((e=>e.ok?e.text():e.text().then((t=>{throw console.log("Server response:",t),new Error(`HTTP error! status: ${e.status}`)})))).catch((e=>{console.error("There was an error!",e)}))}createToken(e){return console.log("OpenViduController createToken"),fetch(this.APPLICATION_SERVER_URL+"api/sessions/"+e+"/connections",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({})}).then((e=>e.ok?e.text():e.text().then((t=>{throw console.log("Server response:",t),new Error(`HTTP error! status: ${e.status}`)})))).catch((e=>{console.error("There was an error!",e)}))}replaceVideoPublisherTrack(e){this.videoPublisherVideoTrack=e.getVideoTracks()[0],null!=this.videoPublisher&&this.videoPublisher.replaceTrack(this.videoPublisherVideoTrack).then((()=>console.log("New track has been published"))).catch((e=>console.error("Error replacing track",e)))}}class z{constructor(e,t,i,n,s,a,r,l){this.webcamDeviceButtonsCreated=!1,this.videoDevicesCount=0,this.onScreenSelectedWebcam=async()=>{const e=localStorage.getItem(f);this.videoPlane.material=this.videoPlaneMaterial;const t=e=>{if(this.openViduEnabled){const t={video:{deviceId:{exact:e}}};navigator.mediaDevices.getUserMedia(t).then((async e=>{console.log("Use the stream: ",e),this.openViduController?.replaceVideoPublisherTrack(e)})).catch((e=>{console.error("Error: ",e)}))}else this.createWebcamStream(e);this.guiController.setWebcamDeviceSelectionStackPanelVisibility(!1),localStorage.setItem(f,e)};if(0==this.webcamDeviceButtonsCreated){this.webcamDeviceButtonsCreated=!0;const i=(i,o=!1)=>{this.videoDevicesCount=i.length,i.forEach((i=>{this.guiController.addWebcamDeviceButton(i.label,i.label,(()=>{t(i.deviceId)})),o&&null!=e&&e==i.deviceId&&t(e)}))};navigator.mediaDevices.enumerateDevices().then((e=>{const t=e.filter((e=>"videoinput"===e.kind));i(t,!0),this.guiController.setWebcamDeviceSelectionButtonVisibility(!0)})).catch((e=>{console.error("Error: ",e)})),navigator.mediaDevices.addEventListener("devicechange",(async()=>{const e=(await navigator.mediaDevices.enumerateDevices()).filter((e=>"videoinput"===e.kind));e.length!=this.videoDevicesCount&&(this.guiController.setupWebcamDeviceSelection(),i(e,!1))}))}else null!=e&&t(e),this.guiController.setWebcamDeviceSelectionButtonVisibility(!0)},this.createWebcamStream=async e=>{console.log("createWebcamStream: ",e);const t=o.VideoTexture.CreateFromWebCamAsync(this.scene,{maxWidth:this.videoResolutionWidth,maxHeight:this.videoResolutionHeight,facingMode:"environment",minWidth:0,minHeight:0,deviceId:e});await t.then((e=>{this.videoTexture&&this.videoTexture.dispose(),this.videoTexture=e,this.videoPlaneMaterial.diffuseTexture=e,this.videoPlaneMaterial.emissiveColor=new o.Color3(1,1,1),null!=this.videoPlaneMaterial.diffuseTexture&&(this.videoPlaneMaterial.diffuseTexture.vScale=-1)})).catch((e=>{console.log("error",e)}))},this.scene=e,this.guiController=t,this.openViduController=i,this.openViduEnabled=n,this.videoPlane=s,this.videoPlaneMaterial=a,this.videoResolutionWidth=r,this.videoResolutionHeight=l}}var H=i(81034);class W{constructor(e,t,i,n,s,a,r){this.scene=e,this.videoPlane=t,this.videoPlaneMaterial=i,this.videoPlaneScreenSaverMaterial=n,this.hlsSource="https://cdn.jwplayer.com/manifests/pZxWPRg4.m3u8",this.hlsStartTime=0,this.setupHLS=e=>{console.log("HLS.js version "+H.ZP.version);const t=this.iOS();if(H.ZP.isSupported()&&0==t){var i={autoStartLoad:!0,startPosition:this.hlsStartTime,debug:e};this.hls=new H.ZP(i),this.hls.attachMedia(this.streamElement),this.hls.on(H.ZP.Events.MEDIA_ATTACHED,(()=>{console.log("stream and hls.js are now bound together ! Autolevel enabled: "+this.hls.autoLevelEnabled),this.hls.startLevel=-1,this.hls.loadSource(this.hlsSource),this.hls.on(H.ZP.Events.MANIFEST_PARSED,((e,t)=>{console.log("manifest loaded, found "+t.levels.length+" quality levels"),console.log("Available levels: "),console.log(this.hls.levels),Number(t.levels.length)}))})),this.hls.on(H.ZP.Events.ERROR,((e,t)=>{if(console.warn("Error event:",t),t.fatal)switch(t.type){case H.ZP.ErrorTypes.NETWORK_ERROR:console.warn("fatal network error encountered, try to recover"),this.hls.startLoad();break;case H.ZP.ErrorTypes.MEDIA_ERROR:console.warn("fatal media error encountered, try to recover"),this.hls.recoverMediaError();break;default:console.error(t.type),console.error("hls cannot recover"),this.hls.destroy()}})),this.hls.on(H.ZP.Events.LEVEL_SWITCHING,(function(e,t){let i;i=t.attrs?JSON.stringify(t.attrs):JSON.stringify(t),console.log("level switching to "+t.level+": "+i)})),this.hls.on(H.ZP.Events.LEVEL_SWITCHED,(function(e,t){console.log("level switched to quality level: "+JSON.stringify(t))}))}else this.handleUnsupported(t)},this.streamElement=document.createElement("video"),this.streamElement.id="hls-stream",this.streamElement.width=s,this.streamElement.height=a,this.streamElement.setAttribute("playsinline",""),this.streamElement.loop=!0,this.streamElement.controls=!0,r.appendChild(this.streamElement),this.setupHLS(!1),this.videoPlane.isVisible=!0,this.videoPlane.isPickable=!0,this.videoPlaneScreenSaverMaterial=new o.StandardMaterial("screenSaver",this.scene),this.videoPlaneScreenSaverMaterial.diffuseColor=new o.Color3(0,0,0),this.videoPlaneScreenSaverMaterial.emissiveColor=new o.Color3(0,0,0),this.videoPlaneScreenSaverMaterial.specularColor=new o.Color3(0,0,0)}handleUnsupported(e){e&&H.ZP.isSupported()?console.warn("Your Browser supports hls.js but it also has a native hls support."):-1!==navigator.userAgent.toLowerCase().indexOf("firefox")?console.warn("You are using Firefox, it looks like MediaSource is not enabled,<br>please ensure the following keys are set appropriately in <b>about:config</b><br>media.mediasource.enabled=true<br>media.mediasource.mp4.enabled=true<br><b>media.mediasource.whitelist=false</b>"):console.warn("Your Browser does not support MediaSourceExtension / MP4 mediasource"),this.streamElement.canPlayType("application/vnd.apple.mpegurl")&&(this.streamElement.src=this.hlsSource,this.streamElement.addEventListener("loadedmetadata",(()=>{console.warn("Playing video without hls.js library"),this.streamElement.currentTime=this.hlsStartTime,this.streamElement.play()})))}iOS(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document}}const j=i.p+"rosSceneEnvironmentTexture.dds",U=i.p+"FinweButton.glb",Y=i.p+"reset-button.png";class X{constructor(e,t=!0){this.trackingDetectionEnabled="0"!==d.getUrlParameter("td"),this.debug3DTextEnabled=!1,this.debug3DText=void 0,this.rightHandTracking=!0,this.leftHandTracking=!0,this.resetButtonMeshEnabled=!0,this.invisibleMaterial=new o.StandardMaterial("invisibleMaterial",e),this.invisibleMaterial.alpha=0,this.resetButtonMeshEnabled=t}getRightHand(){return this.rightHand}getLeftHand(){return this.leftHand}isRightHandTracking(){return this.rightHandTracking}isLeftHandTracking(){return this.leftHandTracking}setupWebXRHand(e,t,i,n){if(null==this.localHandMaterial&&(this.localHandMaterial=e.handMesh?.material),"right"===e.xrController.inputSource.handedness){if(this.rightHand=e,this.debug3DTextEnabled){const i=new o.Vector3(0,1.7,0);this.debug3DText=d.createTextPlane("DebugTextPlane",t,i,"red"),e.xrController.onDisposeObservable.add((()=>{this.debug3DText?.textPlane.dispose(),this.debug3DText?.label.dispose()}))}if(this.trackingDetectionEnabled){let i=0;const o=()=>{if(i++,i%2==0&&null!=this.rightHand?.handMesh?.skeleton?.bones){const e=this.updateLocalHandVisibility(this.previousHashRightHand,this.rightHand?.handMesh?.skeleton?.bones,this.rightHand?.handMesh);this.rightHandTracking=e!=this.previousHashRightHand,this.previousHashRightHand=e}};t.registerBeforeRender(o),e.xrController.onDisposeObservable.add((()=>{t.unregisterBeforeRender(o)}))}}else if("left"===e.xrController.inputSource.handedness){if(this.leftHand=e,this.trackingDetectionEnabled){let i=0;const o=()=>{if(i++,i%2==0&&null!=this.leftHand?.handMesh?.skeleton?.bones){const e=this.updateLocalHandVisibility(this.previousHashLeftHand,this.leftHand?.handMesh?.skeleton?.bones,this.leftHand?.handMesh);this.leftHandTracking=e!=this.previousHashLeftHand,this.previousHashLeftHand=e}};t.registerBeforeRender(o),e.xrController.onDisposeObservable.add((()=>{t.unregisterBeforeRender(o)}))}const s=e.getJointMesh(o.WebXRHandJoint.WRIST);this.resetButtonMeshEnabled&&this.createTouchMeshButton3D(t).then((t=>{null!=t&&(this.wristButton=t,t.buttonRoot.setParent(s),t.buttonRoot.position=new o.Vector3(0,3.5,0),t.buttonRoot.scaling=new o.Vector3(1,1,1),null!=t.button.node&&(t.button.node.rotationQuaternion=o.Quaternion.FromEulerAngles(d.degreesToRadians(-76.9084),d.degreesToRadians(-38.7637),d.degreesToRadians(-60))),e.xrController.onDisposeObservable.add((()=>{t.buttonRoot.dispose(),this.wristButton=void 0,this.smartwatch?.dispose(),this.smartwatch=void 0})))})).catch((e=>{console.error("Error creating touch mesh button:",e)})),n?.updateXRReferences(s,i,t),this.smartwatch=n}}updateLocalHandVisibility(e,t,i){const o=this.calculateHash(t);return null!=e&&e===o?(null!=i.material&&(i.material=this.invisibleMaterial),i==this.leftHand?.handMesh&&(this.wristButton?.buttonRoot.setEnabled(!1),this.smartwatch?.setEnabled(!1))):(null!=i.material&&null!=this.localHandMaterial&&(i.material=this.localHandMaterial),i==this.leftHand?.handMesh&&(this.wristButton?.buttonRoot.setEnabled(!0),this.smartwatch?.setEnabled(!0))),o}calculateHash(e){let t=0;for(const i of e)t+=i.position.x+i.position.y+i.position.z;return null!=this.debug3DText&&(this.debug3DText.label.text="hash: "+t),t}async createTouchMeshButton3D(e){var t=new l.GUI3DManager(e);t.useRealisticScaling=!0;const i=(await o.SceneLoader.ImportMeshAsync("","",U,e)).meshes[0];if(i.scaling=new o.Vector3(1,1,1),!i)return void console.error("createTouchMeshButton3D: PushButtonRoot not found");const n=i.getChildren()[0];if(!n)return void console.error("createTouchMeshButton3D: FinweButton not found");const s=n.getChildMeshes()[0];if(!s)return void console.error("createTouchMeshButton3D: Cylinder mesh not found");const a=s.material;if(!a)return void console.error("createTouchMeshButton3D: Cylinder material not found");const r=s.clone("collisionMesh");r.visibility=0,s.isPickable=!1;const d=s.position.z;a.albedoTexture=new o.Texture(Y,e);const c=new l.TouchMeshButton3D(i,"TouchMeshButton");t.addControl(c),c.collisionMesh=r,c.pointerOutAnimation=()=>{},c.pointerEnterAnimation=()=>{},c.pointerDownAnimation=()=>{},c.pointerUpAnimation=()=>{},i.name="buttonRoot";const h=new o.Sound("pickSound",P,e,null,{loop:!1,autoplay:!1,spatialSound:!0});return h.attachToMesh(i),c.onPointerDownObservable.add((async e=>{s.position.z=0,h.play();const t=new CustomEvent("resetSelf");document.dispatchEvent(t)})),c.onPointerUpObservable.add((async e=>{s.position.z=d})),{buttonRoot:i,button:c}}}var J;i(8134),function(e){e.DEFAULT="default"}(J||(J={}));class G extends R{constructor(){super(...arguments),this.sceneClearColor=new o.Color4(.6,.6,.6,1),this.openViduEnabled="1"===d.getUrlParameter("openVidu"),this.arEnabled=this.xrEnabled,this.videoPlaneAspectRatio=16/9,this.videoResolutionWidth=1280,this.videoResolutionHeight=this.videoResolutionWidth/this.videoPlaneAspectRatio,this.cameraInitialAlpha=3.1358,this.cameraInitialBeta=1.1359,this.cameraInitialRadius=1.3814,this.cameraInitialTarget=new n.P(0,.3,0),this.currentXrCameraInitialPosition=this.arEnabled?new n.P(0,0,1.1):new n.P(-.5,-.7,-.5),this.guiController=new B,this._currentUR10View=J.DEFAULT,this.openViduController=this.openViduEnabled?new D:void 0,this.safetySphereMinSize=.2,this.safetySphereMaxSize=.8,this.safetySphereDefaultSize=.4,this.setupRobot=async e=>{const t=(await o.SceneLoader.ImportMeshAsync("","",M,e)).meshes[0];t.isPickable=!1,this.ur3cb3=new N(t,e),this.ur3ik=new _(t,e);const i=o.MeshBuilder.CreateSphere("targetSphere",{diameter:.1},e);if(i.position=new n.P(0,1,0),this.arEnabled){const t=t=>{e.onAfterRenderObservable.addOnce((()=>{i.setAbsolutePosition(this.ur3cb3.effectorJoint.absolutePosition.clone())}))};document.addEventListener("actionFeedback",(e=>t(e.detail)))}const s=new o.StandardMaterial("sphereMaterial",e);s.emissiveColor=new o.Color3(1,0,0),s.alpha=.7,i.material=s;const a=o.MeshBuilder.CreateSphere("safetySphere",{diameter:1,segments:8},e);a.isPickable=!1,a.position=new n.P(0,.5,0);const r=new o.StandardMaterial("safetyMaterial",e);r.emissiveColor=new o.Color3(0,0,1),r.wireframe=!0,r.alpha=.2,a.material=r,this.safetySphere=a,this.updateSafetySphereSize(this.safetySphereDefaultSize);const l=new o.SixDofDragBehavior;i.addBehavior(l),l.dragDeltaRatio=.5,l.onDragStartObservable.add((()=>{this.arcCamera?.detachControl()})),l.onDragEndObservable.add((()=>{this.arcCamera?.attachControl()})),l.onDragObservable.add((()=>{const e=this.safetySphere.position;n.P.Distance(i.position,e)<=1*this.safetySphere.scaling.x/2&&this.ur3ik.moveToPosition(i.position,i.rotation.x,i.rotation.z,i.rotation.y)})),this.arEnabled&&this.meshRoot&&(t.setParent(this.meshRoot),i.setParent(this.meshRoot),a.setParent(this.meshRoot)),0==this.xrEnabled&&this.createUtilityLayerAndGizmos()},this.setupXR=async e=>{let t;if(0==this.arEnabled){let i;this.teleportationEnabled&&(i=o.MeshBuilder.CreatePlane("floor",{width:5,height:4},e),i.rotation.x=Math.PI/2,i.position.x=-.6,i.position.y=-.7,i.isVisible=!1,t=[i]),this.setupDummyCamera()}const i=await e.createDefaultXRExperienceAsync({floorMeshes:t,uiOptions:this.createUIOptions(),optionalFeatures:!0});this.setupXRFeatures(i,t),this.arEnabled&&i.baseExperience.onInitialXRPoseSetObservable.add((e=>{this.resetMeshRoot(i)})),document.addEventListener("resetSelf",(()=>{this.openViduEnabled?this.resetXRCamera():this.resetDemo(),this.arEnabled&&this.scene.onBeforeRenderObservable.addOnce((()=>{this.resetMeshRoot(i)}))}))},this.createRobotCamera=()=>{this.robotCamera=new o.FreeCamera("robotCamera",new n.P(0,0,-6),this.scene),this.robotCamera.fov=.9;const e=this.scene.getMeshByName("EffectorJoint");this.robotCamera.parent=e,this.robotCamera.layerMask=3,this.robotCamera.rotation.y=Math.PI,this.robotCameraRenderTexture=new o.RenderTargetTexture("robotCameraRender",{width:this.videoResolutionWidth,height:this.videoResolutionHeight},this.scene,{doNotChangeAspectRatio:!1}),this.scene.customRenderTargets.push(this.robotCameraRenderTexture),this.scene.meshes.forEach((e=>{this.robotCameraRenderTexture.renderList?.push(e)})),this.robotCameraRenderTexture.activeCamera=this.robotCamera,this.videoPlaneRobotCameraMaterial=new o.StandardMaterial("robotCamera",this.scene),this.videoPlaneRobotCameraMaterial.specularColor=new o.Color3(.38,.38,.38),this.videoPlaneRobotCameraMaterial.diffuseTexture=this.robotCameraRenderTexture,this.videoPlaneRobotCameraMaterial.emissiveColor=new o.Color3(1,1,1),this.videoPlane.material=this.videoPlaneRobotCameraMaterial,this.scene.removeCamera(this.robotCamera)},this.pauseRobotCamera=e=>{this.robotCamera.setEnabled(!1),this.robotCameraRenderTexture.activeCamera=e?null:this.robotCamera},this.setupOpenViduDisabled=()=>{this.createRobotCamera(),this.videoPlane.actionManager=new o.ActionManager(this.scene);let e=1;this.videoPlane.actionManager.registerAction(new o.ExecuteCodeAction(o.ActionManager.OnPickTrigger,(async()=>{console.log("Screen clicked"),0==e?(e=1,this.videoPlane.material=this.videoPlaneRobotCameraMaterial,this.pauseRobotCamera(!1)):1==e?(e=2,this.pauseRobotCamera(!0),this.webcamController?.onScreenSelectedWebcam()):2==e&&null!=this.hlsController?(e=3,this.guiController.setWebcamDeviceSelectionButtonVisibility(!1),this.videoPlane.material=this.videoPlaneMaterial,this.playVideo(this.hlsController.streamElement)):(e=0,this.hlsController?.streamElement.pause(),this.videoPlane.material=this.videoPlaneScreenSaverMaterial)})))}}set currentUR10View(e){console.log("set currentUR10ViewName"),this._currentUR10View=e}get currentUR10View(){return this._currentUR10View}updateSafetySphereSize(e){this.safetySphere.scaling.set(e,e,e)}async createScene(e,t,i=!0){const n=await super.createScene(e,t,!1);if(this.webXRHandManager=this.xrEnabled?new X(n,!1):void 0,n.environmentTexture=o.CubeTexture.CreateFromPrefilteredData(j,n),this.arEnabled?this.meshRoot=new o.Mesh("meshRoot",n):(this.createLightweightRoom(n),this.createScreen(n)),this.createLightweightTable(n),this.setupRobot(n),this.rosController=new V,this.webcamController=new z(n,this.guiController,this.openViduController,this.openViduEnabled,this.videoPlane,this.videoPlaneMaterial,this.videoResolutionWidth,this.videoResolutionHeight),0==this.arEnabled)if(0==this.openViduEnabled){const e=document.getElementById("openVidu");null!=e?(console.log("OpenVidu is disabled. Setup robot cam webcam and HLS only."),this.hlsController=new W(this.scene,this.videoPlane,this.videoPlaneMaterial,this.videoPlaneScreenSaverMaterial,this.videoResolutionWidth,this.videoResolutionHeight,e),this.setupOpenViduDisabled()):(console.log("OpenVidu and HLS are both disabled. Setup robot cam and webcam only."),this.videoPlane.isVisible=!0,this.videoPlane.isPickable=!0,this.setupOpenViduDisabled())}else console.log("OpenVidu is enabled. Setup webcam only."),this.webcamController.onScreenSelectedWebcam();const s=e=>{const t=e.detail.videoElement;t&&this.playVideo(t)};if(document.addEventListener("mainVideoInitialized",s),document.addEventListener("mainVideoChanged",s),e.resize(),this.guiController.setupGUI(this),document.addEventListener(C,(e=>{if(null!=e.detail.smartwatch){const t=e.detail.smartwatch;this.moveControlsToXR(t)}})),this.xrEnabled){if(this.arEnabled&&!await o.WebXRSessionManager.IsSessionSupportedAsync("immersive-ar"))return console.warn("AR is not available on this device"),n;await this.importHandMeshes(n),this.setupXR(n)}else null!=this.arcCamera&&(this.arcCamera.upperRadiusLimit=2);return console.log("UR10Scene created"),n}createUtilityLayerAndGizmos(){this.utilLayer=new o.UtilityLayerRenderer(this.scene),this.arcCamera&&this.utilLayer.setRenderCamera(this.arcCamera),this.gizmoManager=new o.GizmoManager(this.scene,3,this.utilLayer),this.gizmoManager.rotationGizmoEnabled=!0,this.gizmoManager.gizmos.rotationGizmo&&(this.gizmoManager.gizmos.rotationGizmo.xGizmo.isEnabled=!1,this.gizmoManager.gizmos.rotationGizmo.yGizmo.isEnabled=!0,this.gizmoManager.gizmos.rotationGizmo.zGizmo.isEnabled=!1);const e=this.ur3cb3.wrist03;this.gizmoManager.attachableMeshes=[e],this.gizmoManager.attachToMesh(e)}playVideo(e){this.videoPlane.isVisible=!0,this.videoTexture&&this.videoTexture.dispose(),this.videoTexture=new o.VideoTexture("videoTex",e,this.scene,!1),this.videoPlaneMaterial.diffuseTexture=this.videoTexture,this.videoPlaneMaterial.emissiveColor=new o.Color3(1,1,1)}resetMeshRoot(e){if(0==this.arEnabled)return;console.log("Resetting mesh root position");const t=e.baseExperience.camera,i=t.getForwardRay().direction;i.y=0,i.normalize();const o=t.globalPosition.add(i.scale(.7));o.y+=-.7,this.meshRoot.setAbsolutePosition(o)}createLightweightRoom(e){const t=o.MeshBuilder.CreateBox("box",{size:1},e);t.position=new n.P(-.63,.77,0),t.scaling=new n.P(5.5,3,4.4);const i=t.getIndices();if(null!=i){for(let e=0;e<i.length;e+=3){const t=i[e];i[e]=i[e+2],i[e+2]=t}t.updateIndices(i)}const s=new o.PBRMaterial("boxMaterial",e);s.albedoColor=new o.Color3(1,1,1),s.roughness=1,s.metallic=0,t.material=s,t.isPickable=!1}createLightweightTable(e){const t=new o.PBRMaterial("boxMaterial",e);t.albedoColor=new o.Color3(1,1,1),t.roughness=1,t.metallic=0;const i=o.MeshBuilder.CreateBox("table",{width:.7,height:.1,depth:.7},e);i.position=new n.P(0,-.05,0),i.material=t,this.arEnabled&&this.meshRoot&&i.setParent(this.meshRoot)}createScreen(e){const t=new n.P(0,Math.PI,0),i=o.MeshBuilder.CreatePlane("screenBackgroundPlane",{width:2.56,height:1.7},e),s=new o.StandardMaterial("screenBackgroundMaterial",e);i.position=new n.P(0,.82,-2.163),i.rotation=t,s.emissiveColor=new o.Color3(0,0,0),s.diffuseColor=new o.Color3(0,0,0);const a=2.555/this.videoPlaneAspectRatio;this.videoPlane=o.MeshBuilder.CreatePlane("screenSharePlane",{width:2.555,height:a},e),this.videoPlane.position=new n.P(0,.82,-2.16),this.videoPlane.rotation=t,this.videoPlane.isVisible=!1,this.videoPlaneMaterial=new o.StandardMaterial("screen share",e),this.videoPlaneMaterial.specularColor=new o.Color3(.38,.38,.38)}}const $=new G}}]);